{
    "swagger": "2.0",
    "info": {
        "contact": {
            "name": "Docusign Developer Center",
            "email": "devcenter@docusign.com",
            "url": "https://developers.docusign.com/"
        },
        "description": "Maestro authors and executes experiences that allow non-coders the ability to define Simple Business Process without having to write code and to deploy them seamlessly without having to have development expertise ",
        "termsOfService": "https://www.docusign.com/company/terms-and-conditions/web",
        "title": "Maestro API",
        "version": "1.0.0"
    },
    "host": "apps.docusign.com",
    "basePath": "/api/maestro",
    "schemes": [
        "https"
    ],
    "paths": {
        "/v1/accounts/{accountId}/workflow_definitions/{workflowDefinitionId}/trigger": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The account ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    {
                        "description": "Workflow definition ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "workflowDefinitionId",
                        "required": true,
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    {
                        "description": "Managed Token Id registered with Docusign Account Server",
                        "format": "uuid",
                        "in": "query",
                        "name": "mtid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    {
                        "description": "Managed Token Secret registered with Docusign account server",
                        "format": "uuid",
                        "in": "query",
                        "name": "mtsec",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TriggerPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns a workflow instance trigger URL that can be used to trigger a new instance or return to an instance in progress",
                        "schema": {
                            "$ref": "#/definitions/TriggerWorkflowViaPostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request received",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authorization Denied",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found when workflow definition id or workflow instance id doesn't exist",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "DSAuth": [
                            "aow_manage",
                            "signature"
                        ]
                    },
                    {
                        "DSBearerAuth": []
                    }
                ],
                "tags": [
                    "WorkflowTrigger"
                ],
                "description": "Creates a new workflow instance, triggering the workflow.\n\n<ds-inlinemessage>\n  The Maestro API is currently only available\n  as part of a beta program.\n  See <a href=\"/docs/maestro-api/get-access/\">Get access to Maestro API</a>\n  for details.\n</ds-inlinemessage>\n\n### Related topics\n\n- [How to trigger a Maestro workflow](/docs/maestro-api/how-to/trigger-workflow/)",
                "operationId": "triggerWorkflowViaPost",
                "summary": "Triggers a new instance of the workflow.",
                "x-ds-methodname": "triggerWorkflow",
                "x-ds-method": "triggerWorkflow",
                "x-ds-service": "Workflow Trigger",
                "x-ds-in-sdk": true
            }
        },
        "/v1/accounts/{accountId}/management/instances/{instanceId}/cancel": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The account ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The instance ID of the workflow to cancel.",
                        "format": "uuid",
                        "in": "path",
                        "name": "instanceId",
                        "required": true,
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return Success",
                        "schema": {
                            "$ref": "#/definitions/CancelResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "The requested resource was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "DSAuth": [
                            "aow_manage",
                            "signature"
                        ]
                    },
                    {
                        "DSBearerAuth": []
                    }
                ],
                "tags": [
                    "WorkflowInstanceManagement"
                ],
                "description": "Cancels a running \n[workflow][workflows-concept]\ninstance.\n\n<!-- maestro beta notice -->\n\n<ds-inlinemessage>\n  The Maestro API is currently only available\n  as part of a beta program.\n  See <a href=\"/docs/maestro-api/get-access/\">Get access to Maestro API</a>\n  for details.\n</ds-inlinemessage>\n\n<!-- end maestro beta notice -->\n\n### Related topics\n\n- [How to cancel a Maestro workflow instance][howto-cancel]\n\n\n[howto-cancel]:       /docs/maestro-api/how-to/cancel-workflow/\n[workflows-concept]:  /docs/maestro-api/maestro101/workflows/",
                "operationId": "cancelWorkflowInstance",
                "summary": "Cancels a running workflow instance.",
                "x-ds-methodname": "cancelWorkflowInstance",
                "x-ds-method": "cancelWorkflowInstance",
                "x-ds-service": "Workflow Instance Management",
                "x-ds-in-sdk": true
            }
        },
        "/v1/accounts/{accountId}/management/instances/{instanceId}/history": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The account ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Workflow instance ID. <!-- dacid -->\nA string in UUID format: 4a6d6a08-xxxx-xxxx-xxxx-bae4fecc99c8\n",
                        "format": "uuid",
                        "in": "path",
                        "name": "instanceId",
                        "required": true,
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History of workflow steps is returned",
                        "schema": {
                            "description": "Returns Array of Workflow Step History.",
                            "items": {
                                "$ref": "#/definitions/WorkflowStepHistory"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Authentication details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authorization details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "The requested resource was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "DSAuth": [
                            "aow_manage",
                            "signature"
                        ]
                    },
                    {
                        "DSBearerAuth": []
                    }
                ],
                "tags": [
                    "WorkflowManagement"
                ],
                "description": "Gets the step history for a workflow instance.\n<!-- maestro beta notice -->\n\n<ds-inlinemessage>\n  The Maestro API is currently only available\n  as part of a beta program.\n  See <a href=\"/docs/maestro-api/get-access/\">Get access to Maestro API</a>\n  for details.\n</ds-inlinemessage>\n\n<!-- end maestro beta notice -->",
                "operationId": "getWorkflowHistory",
                "summary": "Gets the step history for a workflow instance.",
                "x-ds-methodname": "getWorkflowHistory",
                "x-ds-method": "getWorkflowHistory",
                "x-ds-service": "Workflow Instance Management",
                "x-ds-in-sdk": true
            }
        },
        "/v1/accounts/{accountId}/management/workflow_definitions": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The account ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Workflow definition metadata status. <!-- filter -->",
                        "enum": [
                            "active",
                            "inactive",
                            "publishing",
                            "unpublishing",
                            "archived",
                            "archiving"
                        ],
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of workflow definitions' metadata.",
                        "schema": {
                            "$ref": "#/definitions/WorkflowDefinitionList"
                        }
                    },
                    "400": {
                        "description": "Bad Request received",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authorization details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "DSAuth": [
                            "aow_manage",
                            "signature"
                        ]
                    },
                    {
                        "DSBearerAuth": []
                    }
                ],
                "tags": [
                    "WorkflowManagement"
                ],
                "description": "Gets a list of  workflow definition metadata.\n<!-- maestro beta notice -->\n\n<ds-inlinemessage>\n  The Maestro API is currently only available\n  as part of a beta program.\n  See <a href=\"/docs/maestro-api/get-access/\">Get access to Maestro API</a>\n  for details.\n</ds-inlinemessage>\n\n<!-- end maestro beta notice -->",
                "operationId": "getWorkflowDefinitions",
                "summary": "Gets a list of  workflow definition metadata.",
                "x-ds-methodname": "getWorkflowDefinitions",
                "x-ds-method": "getWorkflowDefinitions",
                "x-ds-service": "Workflow Management",
                "x-ds-in-sdk": true
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The account ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateOrUpdateWorkflowDefinitionRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return Success",
                        "schema": {
                            "$ref": "#/definitions/NewOrUpdatedWorkflowDefinitionResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "The requested resource was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "DSAuth": [
                            "aow_manage",
                            "signature"
                        ]
                    },
                    {
                        "DSBearerAuth": []
                    }
                ],
                "tags": [
                    "WorkflowManagement"
                ],
                "description": "Creates a workflow definition. In general, it is much easier to create a workflow through the web interface.\n\n<!-- maestro beta notice -->\n\n<ds-inlinemessage>\n  The Maestro API is currently only available\n  as part of a beta program.\n  See <a href=\"/docs/maestro-api/get-access/\">Get access to Maestro API</a>\n  for details.\n</ds-inlinemessage>\n\n<!-- end maestro beta notice -->\n\nA Maestro workflow is an object that represents your end-to-end agreement workflow, including all pre and post-signing steps. You can add and order steps as necessary for your workflow and add conditional logic to create branches within that workflow. \n\nTo learn the basics of workflows and to see an example workflow definition,\nsee [Workflows](/docs/maestro-api/maestro101/workflows/) in\nthe Maestro API concepts guide.\n\n",
                "operationId": "createNewWorkflowDefinition",
                "summary": "Creates a workflow definition.",
                "x-ds-methodname": "createWorkflowDefinition",
                "x-ds-method": "createWorkflowDefinition",
                "x-ds-service": "Workflow Management",
                "x-ds-in-sdk": true
            }
        },
        "/v1/accounts/{accountId}/management/workflow_definitions/{workflowDefinitionId}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The account ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the workflow definition to delete.",
                        "format": "uuid",
                        "in": "path",
                        "name": "workflowDefinitionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Delete Successful.",
                        "schema": {
                            "$ref": "#/definitions/WorkflowDeleteResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "DSAuth": [
                            "aow_manage",
                            "signature"
                        ]
                    },
                    {
                        "DSBearerAuth": []
                    }
                ],
                "tags": [
                    "WorkflowManagement"
                ],
                "description": "Deletes a workflow definition.\n<!-- maestro beta notice -->\n\n<ds-inlinemessage>\n  The Maestro API is currently only available\n  as part of a beta program.\n  See <a href=\"/docs/maestro-api/get-access/\">Get access to Maestro API</a>\n  for details.\n</ds-inlinemessage>\n\n<!-- end maestro beta notice -->",
                "operationId": "deleteWorkflowDefinition",
                "summary": "Deletes a workflow definition.",
                "x-ds-methodname": "deleteWorkflowDefinition",
                "x-ds-method": "deleteWorkflowDefinition",
                "x-ds-service": "Workflow Management",
                "x-ds-in-sdk": true
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The account ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Workflow definition ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "workflowDefinitionId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the deployed workflow definition.",
                        "format": "string",
                        "in": "query",
                        "name": "lastDeployedId",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a workflow definition.",
                        "schema": {
                            "$ref": "#/definitions/WorkflowDefinitionWithId"
                        }
                    },
                    "400": {
                        "description": "Bad Request received",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authorization details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "DSAuth": [
                            "aow_manage",
                            "signature"
                        ]
                    },
                    {
                        "DSBearerAuth": []
                    }
                ],
                "tags": [
                    "WorkflowManagement"
                ],
                "description": "Returns a workflow definition.\n<!-- maestro beta notice -->\n\n<ds-inlinemessage>\n  The Maestro API is currently only available\n  as part of a beta program.\n  See <a href=\"/docs/maestro-api/get-access/\">Get access to Maestro API</a>\n  for details.\n</ds-inlinemessage>\n\n<!-- end maestro beta notice -->\n\n### Related topics\n\n- [How to trigger a Maestro workflow][howto-trigger]\n\n[howto-trigger]:      /docs/maestro-api/how-to/trigger-workflow/\n\n",
                "operationId": "getWorkflowDefinition",
                "summary": "Gets a workflow definition.",
                "x-ds-methodname": "getWorkflowDefinition",
                "x-ds-method": "getWorkflowDefinition",
                "x-ds-service": "Workflow Management",
                "x-ds-in-sdk": true
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The account ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Workflow definition ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "workflowDefinitionId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateOrUpdateWorkflowDefinitionRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return Success",
                        "schema": {
                            "$ref": "#/definitions/NewOrUpdatedWorkflowDefinitionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request, malformed input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "The requested resource was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "DSAuth": [
                            "aow_manage",
                            "signature"
                        ]
                    },
                    {
                        "DSBearerAuth": []
                    }
                ],
                "tags": [
                    "WorkflowManagement"
                ],
                "description": "Updates a workflow definition.\n<!-- maestro beta notice -->\n\n<ds-inlinemessage>\n  The Maestro API is currently only available\n  as part of a beta program.\n  See <a href=\"/docs/maestro-api/get-access/\">Get access to Maestro API</a>\n  for details.\n</ds-inlinemessage>\n\n<!-- end maestro beta notice -->\n\nA Maestro workflow is an object that represents your end-to-end agreement workflow, including all pre and post-signing steps. You can add and order steps as necessary for your workflow and add conditional logic to create branches within that workflow.\n\nTo learn the basics of workflows and to see an example workflow definition,\nsee [Workflows](/docs/maestro-api/maestro101/workflows/) in\nthe Maestro API concepts guide.\n\n",
                "operationId": "updateWorkflowDefinition",
                "summary": "Updates a workflow definition.",
                "x-ds-methodname": "updateWorkflowDefinition",
                "x-ds-method": "updateWorkflowDefinition",
                "x-ds-service": "Workflow Management",
                "x-ds-in-sdk": true
            }
        },
        "/v1/accounts/{accountId}/management/workflow_definitions/{workflowDefinitionId}/config_instances": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The account ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Workflow definition ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "workflowDefinitionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of configuration instances for a workflow definition",
                        "schema": {
                            "$ref": "#/definitions/GetConfigurationInstancesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request received",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authorization details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "DSAuth": [
                            "aow_manage",
                            "signature"
                        ]
                    },
                    {
                        "DSBearerAuth": []
                    }
                ],
                "tags": [
                    "WorkflowInstanceManagement"
                ],
                "description": "Gets a list of configuration instances for a workflow definition\n<!-- maestro beta notice -->\n\n<ds-inlinemessage>\n  The Maestro API is currently only available\n  as part of a beta program.\n  See <a href=\"/docs/maestro-api/get-access/\">Get access to Maestro API</a>\n  for details.\n</ds-inlinemessage>\n\n<!-- end maestro beta notice -->",
                "operationId": "getConfigInstances",
                "summary": "Gets a list of configuration instances for a workflow definition",
                "x-ds-methodname": "getWorkflowDefinitionConfigInstances",
                "x-ds-method": "getWorkflowDefinitionConfigInstances",
                "x-ds-service": "Workflow Management",
                "x-ds-in-sdk": true
            }
        },
        "/v1/accounts/{accountId}/management/workflow_definitions/{workflowDefinitionId}/instances": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The account ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ID of the workflow definition to delete.",
                        "format": "uuid",
                        "in": "path",
                        "name": "workflowDefinitionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of workflow instances for a workflow definition in the specified account.",
                        "schema": {
                            "description": "A list of workflow instances (0 or more).",
                            "items": {
                                "$ref": "#/definitions/WorkflowInstance"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Authentication details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authorization details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "The requested resource was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "DSAuth": [
                            "aow_manage",
                            "signature"
                        ]
                    },
                    {
                        "DSBearerAuth": []
                    }
                ],
                "tags": [
                    "WorkflowInstanceManagement"
                ],
                "description": "Get a list of instances of a deployed workflow definition.\n<!-- maestro beta notice -->\n\n<ds-inlinemessage>\n  The Maestro API is currently only available\n  as part of a beta program.\n  See <a href=\"/docs/maestro-api/get-access/\">Get access to Maestro API</a>\n  for details.\n</ds-inlinemessage>\n\n<!-- end maestro beta notice -->\n\nA successful response is an array of \n[`WorkflowInstance`](/docs/maestro-api/reference/workflowinstancemanagement/workflowinstancemanagement/getworkflowinstance/#schema_200_workflowinstance_workflowinstance)\nobjects.\n",
                "operationId": "getWorkflowInstances",
                "summary": "Get a list of instances of a deployed workflow definition.",
                "x-ds-methodname": "getWorkflowInstances",
                "x-ds-method": "getWorkflowInstances",
                "x-ds-service": "Workflow Instance Management",
                "x-ds-in-sdk": true
            }
        },
        "/v1/accounts/{accountId}/management/workflow_definitions/{workflowDefinitionId}/instances/{instanceId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The account ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Workflow definition ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "workflowDefinitionId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Workflow instance ID. <!-- dacid -->\nA string in UUID format: 4a6d6a08-xxxx-xxxx-xxxx-bae4fecc99c8\n",
                        "format": "uuid",
                        "in": "path",
                        "name": "instanceId",
                        "required": true,
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details for a specific instance for a workflow definition in the specified account.",
                        "schema": {
                            "$ref": "#/definitions/WorkflowInstance"
                        }
                    },
                    "401": {
                        "description": "Authentication details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authorization details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "The requested resource was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "DSAuth": [
                            "aow_manage",
                            "signature"
                        ]
                    },
                    {
                        "DSBearerAuth": []
                    }
                ],
                "tags": [
                    "WorkflowInstanceManagement"
                ],
                "description": "Gets the details for a specific instance for a deployed workflow definition.\n\n<!-- maestro beta notice -->\n\n<ds-inlinemessage>\n  The Maestro API is currently only available\n  as part of a beta program.\n  See <a href=\"/docs/maestro-api/get-access/\">Get access to Maestro API</a>\n  for details.\n</ds-inlinemessage>\n\n<!-- end maestro beta notice -->\n\n\n### Related topics\n\n- [How to get the status of a Maestro workflow instance][howto-status]\n\n[howto-status]: /docs/maestro-api/how-to/get-workflow-status/\n",
                "operationId": "getWorkflowInstance",
                "summary": "Gets the details for a specific instance for a deployed workflow definition.",
                "x-ds-methodname": "getWorkflowInstance",
                "x-ds-method": "getWorkflowInstance",
                "x-ds-service": "Workflow Instance Management",
                "x-ds-in-sdk": true
            }
        },
        "/v1/accounts/{accountId}/management/workflow_definitions/{workflowDefinitionId}/publish": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The account ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Workflow definition ID.",
                        "format": "uuid",
                        "in": "path",
                        "name": "workflowDefinitionId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeployRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return Success",
                        "schema": {
                            "$ref": "#/definitions/DeployResponse"
                        }
                    },
                    "400": {
                        "description": "Workflow Definition is invalid",
                        "schema": {
                            "$ref": "#/definitions/InvalidWorkflowResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication details are invalid",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "The requested resource was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "DSAuth": [
                            "aow_manage",
                            "signature"
                        ]
                    },
                    {
                        "DSBearerAuth": []
                    }
                ],
                "tags": [
                    "WorkflowManagement"
                ],
                "description": "Publishes or unpublishes a workflow definition.\n<!-- maestro beta notice -->\n\n<ds-inlinemessage>\n  The Maestro API is currently only available\n  as part of a beta program.\n  See <a href=\"/docs/maestro-api/get-access/\">Get access to Maestro API</a>\n  for details.\n</ds-inlinemessage>\n\n<!-- end maestro beta notice -->",
                "operationId": "publishOrUnPublishWorkflowDefinition",
                "summary": "Publishes or unpublishes a workflow definition.",
                "x-ds-methodname": "publishOrUnPublishWorkflowDefinition",
                "x-ds-method": "publishOrUnPublishWorkflowDefinition",
                "x-ds-service": "Workflow Management",
                "x-ds-in-sdk": true
            }
        }
    },
    "definitions": {
        "AccessTokenResponse": {
            "description": "Access Token response details",
            "properties": {
                "access_token": {
                    "description": "JWT access token",
                    "type": "string"
                },
                "expires_in": {
                    "description": "Expires in seconds",
                    "type": "number"
                },
                "token_type": {
                    "$ref": "#/definitions/AccessTokenTokenTypes",
                    "description": ""
                }
            },
            "type": "object",
            "x-ds-definition-name": "AccessTokenResponse",
            "x-ms-summary": "Access Token response details"
        },
        "AccessTokenTokenTypes": {
            "description": "Access Token token Types",
            "enum": [
                "Bearer",
                "Application",
                "Resource"
            ],
            "type": "string",
            "x-ds-definition-name": "AccessTokenTokenTypes",
            "x-ms-summary": "Access Token token Types"
        },
        "AccountId": {
            "description": "Account Id",
            "example": "00000000-0000-0000-0000-000000000000",
            "format": "uuid",
            "type": "string",
            "x-ds-definition-name": "AccountId",
            "x-ms-summary": "Account Id"
        },
        "AowUUID": {
            "example": "00000000-0000-0000-0000-000000000000",
            "format": "uuid",
            "type": "string",
            "x-ds-definition-name": "AowUUID",
            "description": "",
            "x-ms-summary": ""
        },
        "AowUUIDString": {
            "format": "uuid",
            "type": "string",
            "x-ds-definition-name": "AowUUIDString",
            "description": "A string in UUID format: 4a6d6a08-xxxx-xxxx-xxxx-bae4fecc99c8",
            "x-ms-summary": "A string in UUID format: 4a6d6a08-xxxx-xxxx-xxxx-bae4fecc99c8"
        },
        "CancelResponse": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Error code message"
                },
                "message": {
                    "type": "string",
                    "description": "Human-readable description of the error."
                }
            },
            "required": [
                "message"
            ],
            "type": "object",
            "x-ds-definition-name": "CancelResponse",
            "description": "Cancel workflow instance response.",
            "x-ms-summary": "Cancel workflow instance response."
        },
        "CreateOrUpdateWorkflowDefinitionRequestBody": {
            "description": "Request body to create or update a workflow definition.",
            "properties": {
                "workflowDefinition": {
                    "$ref": "#/definitions/WorkflowDefinition",
                    "description": "A Maestro workflow definition."
                }
            },
            "type": "object",
            "x-ds-definition-name": "CreateOrUpdateWorkflowDefinitionRequestBody",
            "x-ms-summary": "Request body to create or update a workflow definition."
        },
        "DSDoUntilStep": {
            "properties": {
                "doSteps": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array",
                    "description": ""
                },
                "expression": {
                    "$ref": "#/definitions/DSWorkflowComparisonExpression",
                    "description": ""
                },
                "id": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": "The workflow step name where the error occurred"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowStepTypes.DoUntil",
                    "description": ""
                }
            },
            "required": [
                "name",
                "id",
                "type",
                "doSteps",
                "expression"
            ],
            "type": "object",
            "x-ds-definition-name": "DSDoUntilStep",
            "description": "",
            "x-ms-summary": ""
        },
        "DSDocGenStep": {
            "properties": {
                "config": {
                    "$ref": "#/definitions/RecordToNever",
                    "description": ""
                },
                "id": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": ""
                },
                "input": {
                    "properties": {
                        "dataJson": {
                            "$ref": "#/definitions/RecordStringOrVariableOrTransformation"
                        },
                        "outputFileName": {
                            "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                            "type": "object"
                        },
                        "outputFileNameIsUnique": {
                            "type": "boolean"
                        },
                        "outputFormat": {
                            "$ref": "#/definitions/DSWorkflowDocGenDocOutputFormat"
                        },
                        "templateId": {
                            "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                            "type": "object"
                        }
                    },
                    "required": [
                        "outputFormat",
                        "outputFileNameIsUnique",
                        "outputFileName",
                        "templateId",
                        "dataJson"
                    ],
                    "type": "object",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": "The workflow step name where the error occurred"
                },
                "output": {
                    "additionalProperties": {
                        "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                        "type": "object"
                    },
                    "description": "",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowStepTypes.DSDocGen",
                    "description": ""
                }
            },
            "required": [
                "name",
                "id",
                "type",
                "config",
                "input",
                "output"
            ],
            "type": "object",
            "x-ds-definition-name": "DSDocGenStep",
            "description": "",
            "x-ms-summary": ""
        },
        "DSIdvStep": {
            "properties": {
                "config": {
                    "$ref": "#/definitions/RecordToNever",
                    "description": ""
                },
                "id": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": "The ID of the  step."
                },
                "input": {
                    "properties": {
                        "backgroundColorBranding": {
                            "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                            "type": "object"
                        },
                        "expectedFullName": {
                            "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                            "type": "object"
                        },
                        "retryLimit": {
                            "description": "This object should be any of the following object models or types: [number, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                            "type": "object"
                        },
                        "textColorBranding": {
                            "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                            "type": "object"
                        }
                    },
                    "required": [
                        "textColorBranding",
                        "backgroundColorBranding",
                        "expectedFullName",
                        "retryLimit"
                    ],
                    "type": "object",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": "The workflow step name where the error occurred"
                },
                "output": {
                    "additionalProperties": {
                        "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                        "type": "object"
                    },
                    "description": "",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowStepTypes.DSIdv",
                    "description": ""
                }
            },
            "required": [
                "name",
                "id",
                "type",
                "config",
                "input",
                "output"
            ],
            "type": "object",
            "x-ds-definition-name": "DSIdvStep",
            "description": "ID verification step.",
            "x-ms-summary": "ID verification step."
        },
        "DSIfElseStep": {
            "properties": {
                "elseSteps": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array",
                    "description": ""
                },
                "expression": {
                    "$ref": "#/definitions/DSWorkflowBooleanExpression",
                    "description": ""
                },
                "id": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": ""
                },
                "ifSteps": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": "The workflow step name where the error occurred"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowStepTypes.DSIfElse",
                    "description": ""
                }
            },
            "required": [
                "name",
                "id",
                "type",
                "ifSteps",
                "elseSteps",
                "expression"
            ],
            "type": "object",
            "x-ds-definition-name": "DSIfElseStep",
            "description": "",
            "x-ms-summary": ""
        },
        "DSLoopStep": {
            "properties": {
                "expression": {
                    "$ref": "#/definitions/DSWorkflowComparisonExpression",
                    "description": ""
                },
                "id": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": ""
                },
                "loopSteps": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": "The workflow step name where the error occurred"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowStepTypes.Loop",
                    "description": ""
                }
            },
            "required": [
                "name",
                "id",
                "type",
                "loopSteps",
                "expression"
            ],
            "type": "object",
            "x-ds-definition-name": "DSLoopStep",
            "description": "",
            "x-ms-summary": ""
        },
        "DSParallelStep": {
            "properties": {
                "expression": {
                    "$ref": "#/definitions/DSWorkflowParallelExpression",
                    "description": ""
                },
                "id": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": ""
                },
                "lanes": {
                    "additionalProperties": {
                        "$ref": "#/definitions/DSWorkflowLane"
                    },
                    "type": "object",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": "The workflow step name where the error occurred"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowStepTypes.Parallel",
                    "description": ""
                }
            },
            "required": [
                "name",
                "id",
                "type",
                "lanes",
                "expression"
            ],
            "type": "object",
            "x-ds-definition-name": "DSParallelStep",
            "description": "",
            "x-ms-summary": ""
        },
        "DSServiceStep": {
            "description": "A Maestro workflow service\n[step](/docs/maestro-api/maestro101/steps/).\n\nThis object should be any of the following objects:\n\n- DSWebFormsStep: collect data from a web form\n- DSIdvStep: ID verification step\n- DSDocGenStep:\n- DSSignStep: Get signatures\n\n\n\n",
            "x-ds-definition-name": "DSServiceStep",
            "x-ms-summary": "A Maestro workflow service\n[step](/docs/maestro-api/maestro101/steps/).\n\nThis object should be any of the following objects:\n\n- DSWebFormsStep: collect data from a web form\n- DSIdvStep: ID verification step\n- DSDocGenStep:\n- DSSignStep: Get signatures\n\n\n\n"
        },
        "DSSignStep": {
            "properties": {
                "config": {
                    "$ref": "#/definitions/RecordToNever",
                    "description": ""
                },
                "id": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": ""
                },
                "input": {
                    "properties": {
                        "documents": {
                            "items": {
                                "type": "object"
                            },
                            "type": "array",
                            "description": "A list of #/definitions/ESignDocuments. Each element is: ESignDocument Object. This object should be any of the following object models: [#/definitions/ESignDocumentFromPreviousStep, #/definitions/ESignDocumentFromESignTemplate]"
                        },
                        "emailBlurb": {
                            "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                            "type": "object"
                        },
                        "emailSubject": {
                            "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                            "type": "object"
                        },
                        "isEmbeddedSign": {
                            "type": "boolean"
                        },
                        "signers": {
                            "items": {
                                "$ref": "#/definitions/ESignSigner"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "signers",
                        "documents",
                        "isEmbeddedSign"
                    ],
                    "type": "object",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": "The workflow step name where the error occurred"
                },
                "output": {
                    "additionalProperties": {
                        "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                        "type": "object"
                    },
                    "description": "",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowStepTypes.DSSign",
                    "description": ""
                }
            },
            "required": [
                "name",
                "id",
                "type",
                "config",
                "input",
                "output"
            ],
            "type": "object",
            "x-ds-definition-name": "DSSignStep",
            "description": "",
            "x-ms-summary": ""
        },
        "DSTransformationStep": {
            "properties": {
                "config": {
                    "$ref": "#/definitions/RecordToNever",
                    "description": ""
                },
                "expression": {
                    "description": "",
                    "type": "object"
                },
                "id": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": ""
                },
                "input": {
                    "additionalProperties": {
                        "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                        "type": "object"
                    },
                    "description": "",
                    "type": "object"
                },
                "name": {
                    "type": "string",
                    "description": "The workflow step name where the error occurred"
                },
                "output": {
                    "additionalProperties": {
                        "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                        "type": "object"
                    },
                    "description": "",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowStepTypes.DSTransformation",
                    "description": ""
                }
            },
            "required": [
                "name",
                "id",
                "type",
                "config",
                "input",
                "output",
                "expression"
            ],
            "type": "object",
            "x-ds-definition-name": "DSTransformationStep",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWebFormsStep": {
            "description": "A Maesttro workflow WebForms step",
            "properties": {
                "config": {
                    "properties": {
                        "pageUrl": {
                            "format": "uri",
                            "type": "string"
                        }
                    },
                    "required": [
                        "pageUrl"
                    ],
                    "description": ""
                },
                "id": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": ""
                },
                "input": {
                    "additionalProperties": {
                        "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                        "type": "object"
                    },
                    "description": "",
                    "type": "object"
                },
                "name": {
                    "type": "string",
                    "description": "The workflow step name where the error occurred"
                },
                "output": {
                    "additionalProperties": {
                        "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                        "type": "object"
                    },
                    "description": "",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowStepTypes.DSWebForms",
                    "description": ""
                }
            },
            "required": [
                "name",
                "id",
                "type",
                "config",
                "input",
                "output"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWebFormsStep",
            "x-ms-summary": "A Maesttro workflow WebForms step"
        },
        "DSWorkflowBooleanExpression": {
            "properties": {
                "expressions": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array",
                    "description": ""
                },
                "logicalOperator": {
                    "$ref": "#/definitions/DSWorkflowLogicalOperatorTypes",
                    "description": ""
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowExpressionTypes.BooleanExpression",
                    "description": ""
                }
            },
            "required": [
                "type",
                "logicalOperator",
                "expressions"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowBooleanExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowComparisonExpression": {
            "properties": {
                "comparisonOperator": {
                    "$ref": "#/definitions/DSWorkflowComparisonOperatorTypes",
                    "description": ""
                },
                "leftOperand": {
                    "description": "This model should be any of the following object models or types: [number, boolean, #/definitions/StringOrVariableOrTransformation]",
                    "type": "object"
                },
                "rightOperand": {
                    "description": "This model should be any of the following object models or types: [number, boolean, #/definitions/StringOrVariableOrTransformation]",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowExpressionTypes.ComparisonExpression",
                    "description": ""
                }
            },
            "required": [
                "type",
                "comparisonOperator",
                "leftOperand",
                "rightOperand"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowComparisonExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowComparisonOperatorTypes": {
            "enum": [
                "Contains",
                "NotContains",
                "Equal",
                "NotEqual",
                "GreaterThan",
                "GreaterThanOrEqual",
                "LessThan",
                "LessThanOrEqual",
                "StartsWith",
                "NotStartsWith",
                "EndsWith",
                "NotEndsWith"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowComparisonOperatorTypes",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowConcatExpression": {
            "properties": {
                "inputs": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array",
                    "description": ""
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowTransformationExpressionTypes.ConcatExpression",
                    "description": ""
                }
            },
            "required": [
                "type",
                "text",
                "text2"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowConcatExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowDocGenDocOutputFormat": {
            "enum": [
                "pdf",
                "docx"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowDocGenDocOutputFormat",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowExpressionTypes.BooleanExpression": {
            "enum": [
                "BooleanExpression"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowExpressionTypes.BooleanExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowExpressionTypes.ComparisonExpression": {
            "enum": [
                "ComparisonExpression"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowExpressionTypes.ComparisonExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowExpressionTypes.ParallelExpression": {
            "enum": [
                "ParallelExpression"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowExpressionTypes.ParallelExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowIndexOfExpression": {
            "properties": {
                "searchText": {
                    "description": "",
                    "type": "object"
                },
                "text": {
                    "description": "",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowTransformationExpressionTypes.IndexOfExpression",
                    "description": ""
                }
            },
            "required": [
                "type",
                "text",
                "searchText"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowIndexOfExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowLane": {
            "properties": {
                "laneId": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": ""
                },
                "laneSteps": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array",
                    "description": ""
                }
            },
            "required": [
                "laneId",
                "laneSteps"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowLane",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowLanesRecord": {
            "additionalProperties": {
                "$ref": "#/definitions/DSWorkflowLane"
            },
            "type": "object",
            "x-ds-definition-name": "DSWorkflowLanesRecord",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowLastIndexOfExpression": {
            "properties": {
                "searchText": {
                    "description": "",
                    "type": "object"
                },
                "text": {
                    "description": "",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowTransformationExpressionTypes.LastIndexOfExpression",
                    "description": ""
                }
            },
            "required": [
                "type",
                "text",
                "searchText"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowLastIndexOfExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowLogicalOperatorTypes": {
            "enum": [
                "And",
                "Or"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowLogicalOperatorTypes",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowParallelExpression": {
            "properties": {
                "parallelCompletionSettings": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object",
                    "description": ""
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowExpressionTypes.ParallelExpression",
                    "description": ""
                }
            },
            "required": [
                "type",
                "parallelCompletionSettings"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowParallelExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowParticipantRecord": {
            "additionalProperties": {
                "$ref": "#/definitions/Participant"
            },
            "description": "A Maestro workflow participant record.",
            "type": "object",
            "x-ds-definition-name": "DSWorkflowParticipantRecord",
            "x-ms-summary": "A Maestro workflow participant record."
        },
        "DSWorkflowReplaceExpression": {
            "properties": {
                "newText": {
                    "description": "",
                    "type": "object"
                },
                "oldText": {
                    "description": "",
                    "type": "object"
                },
                "text": {
                    "description": "",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowTransformationExpressionTypes.ReplaceExpression",
                    "description": ""
                }
            },
            "required": [
                "type",
                "text",
                "oldText",
                "newText"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowReplaceExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowStep": {
            "description": "A Mestro workflow step. This object should be any of the following objects:\n\n- DSServiceStep\n- DSTransformationStep\n- DSDocGenStep\n- DSSignStep]",
            "x-ds-definition-name": "DSWorkflowStep",
            "x-ms-summary": "A Mestro workflow step. This object should be any of the following objects:\n\n- DSServiceStep\n- DSTransformationStep\n- DSDocGenStep\n- DSSignStep]"
        },
        "DSWorkflowStepTypes.DSDocGen": {
            "enum": [
                "DS-DocGen"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowStepTypes.DSDocGen",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowStepTypes.DSIdv": {
            "enum": [
                "DS-IDV"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowStepTypes.DSIdv",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowStepTypes.DSIfElse": {
            "enum": [
                "DS-IfElse"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowStepTypes.DSIfElse",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowStepTypes.DSSign": {
            "enum": [
                "DS-Sign"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowStepTypes.DSSign",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowStepTypes.DSTransformation": {
            "enum": [
                "DS-Transformation"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowStepTypes.DSTransformation",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowStepTypes.DSWebForms": {
            "enum": [
                "DS-WebForms"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowStepTypes.DSWebForms",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowStepTypes.DoUntil": {
            "enum": [
                "DS-DoUntil"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowStepTypes.DoUntil",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowStepTypes.Loop": {
            "enum": [
                "DS-Loop"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowStepTypes.Loop",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowStepTypes.Parallel": {
            "enum": [
                "DS-Parallel"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowStepTypes.Parallel",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowSubstringExpression": {
            "properties": {
                "length": {
                    "description": "",
                    "type": "object"
                },
                "startIndex": {
                    "description": "",
                    "type": "object"
                },
                "text": {
                    "description": "",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowTransformationExpressionTypes.SubstringExpression",
                    "description": ""
                }
            },
            "required": [
                "type",
                "text",
                "startIndex"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowSubstringExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowToLowerExpression": {
            "properties": {
                "text": {
                    "description": "",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowTransformationExpressionTypes.ToLowerExpression",
                    "description": ""
                }
            },
            "required": [
                "type",
                "text"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowToLowerExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowToUpperExpression": {
            "properties": {
                "text": {
                    "description": "",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowTransformationExpressionTypes.ToUpperExpression",
                    "description": ""
                }
            },
            "required": [
                "type",
                "text"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowToUpperExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowTransformationExpression": {
            "description": "Transformation Expression object. This object should be any of the following object models: [#/definitions/DSWorkflowReplaceExpression, #/definitions/DSWorkflowToLowerExpression, #/definitions/DSWorkflowToUpperExpression, #/components/schemas/DSWorkflowLastIndexOfExpression, #/components/schemas/DSWorkflowIndexOfExpression, #/components/schemas/DSWorkflowSubstringExpression, #/components/schemas/DSWorkflowConcatExpression]",
            "x-ds-definition-name": "DSWorkflowTransformationExpression",
            "x-ms-summary": "Transformation Expression object. This object should be any of the following object models: [#/definitions/DSWorkflowReplaceExpression, #/definitions/DSWorkflowToLowerExpression, #/definitions/DSWorkflowToUpperExpression, #/components/schemas/DSWorkflowLastIndexOfExpression, #/components/schemas/DSWorkflowIndexOfExpression, #/components/schemas/DSWorkflowSubstringExpression, #/components/schemas/DSWorkflowConcatExpression]"
        },
        "DSWorkflowTransformationExpressionTypes.ConcatExpression": {
            "enum": [
                "ConcatExpression"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowTransformationExpressionTypes.ConcatExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowTransformationExpressionTypes.IndexOfExpression": {
            "enum": [
                "IndexOfExpression"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowTransformationExpressionTypes.IndexOfExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowTransformationExpressionTypes.LastIndexOfExpression": {
            "enum": [
                "LastIndexOfExpression"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowTransformationExpressionTypes.LastIndexOfExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowTransformationExpressionTypes.ReplaceExpression": {
            "enum": [
                "ReplaceExpression"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowTransformationExpressionTypes.ReplaceExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowTransformationExpressionTypes.SubstringExpression": {
            "enum": [
                "SubstringExpression"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowTransformationExpressionTypes.SubstringExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowTransformationExpressionTypes.ToLowerExpression": {
            "enum": [
                "ToLowerExpression"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowTransformationExpressionTypes.ToLowerExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowTransformationExpressionTypes.ToUpperExpression": {
            "enum": [
                "ToUpperExpression"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowTransformationExpressionTypes.ToUpperExpression",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowTrigger": {
            "description": "A Maestro workflow trigger.",
            "properties": {
                "eventType": {
                    "$ref": "#/definitions/EventTypes",
                    "description": "The trigger event type. One of:\n\n- `Sent`\n- `Delivered`\n- `Signed`\n- `Completed`\n"
                },
                "httpType": {
                    "$ref": "#/definitions/HttpTypes",
                    "description": "The trigger HTTP type. One of:\n\n- `Get`\n- `Post`\n- `Put`\n- `Delete`\n\n\n"
                },
                "id": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": "The ID of the trigger."
                },
                "input": {
                    "additionalProperties": {
                        "description": "Reference of #/definitions/DSWorkflowVariable. DS Workflow Variables",
                        "type": "object"
                    },
                    "description": "The input [variable](/docs/maestro-api/maestro101/variables/)\nrecord.",
                    "type": "object"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the trigger."
                },
                "output": {
                    "additionalProperties": {
                        "description": "Reference of #/definitions/DSWorkflowVariable. DS Workflow Variables",
                        "type": "object"
                    },
                    "description": "The output [variable](/docs/maestro-api/maestro101/variables/)\nrecord.",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/DSWorkflowTriggerTypes",
                    "description": "The workflow trigger type. One of:\n\n- `Http`\n- `Http-API`\n"
                }
            },
            "required": [
                "name",
                "id",
                "type",
                "httpType",
                "input",
                "output"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowTrigger",
            "x-ms-summary": "A Maestro workflow trigger."
        },
        "DSWorkflowTriggerTypes": {
            "description": "The DS Workflow Trigger types",
            "enum": [
                "Http",
                "Http-API"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowTriggerTypes",
            "x-ms-summary": "The DS Workflow Trigger types"
        },
        "DSWorkflowVariable": {
            "description": "DS Workflow Variables",
            "x-ds-definition-name": "DSWorkflowVariable",
            "x-ms-summary": "DS Workflow Variables"
        },
        "DSWorkflowVariableFromParticipant": {
            "description": "DS Workflow Variable from a Participant",
            "type": "object",
            "x-ds-definition-name": "DSWorkflowVariableFromParticipant",
            "x-ms-summary": "DS Workflow Variable from a Participant"
        },
        "DSWorkflowVariableFromStep": {
            "description": "DS Workflow Variable from a Step",
            "properties": {
                "key": {
                    "type": "string",
                    "description": ""
                },
                "propertyName": {
                    "type": "string",
                    "description": ""
                },
                "source": {
                    "$ref": "#/definitions/DSWorkflowVariableSourceTypes.Step",
                    "description": ""
                },
                "stepId": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": "The Step Id of the workflow step in the workflow instance"
                }
            },
            "required": [
                "source",
                "key",
                "propertyName",
                "stepId"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowVariableFromStep",
            "x-ms-summary": "DS Workflow Variable from a Step"
        },
        "DSWorkflowVariableFromVariable": {
            "description": "A Maestro workflow [variable](/docs/maestro-api/maestro101/variables/)",
            "properties": {
                "key": {
                    "type": "string",
                    "description": ""
                },
                "propertyName": {
                    "type": "string",
                    "description": ""
                },
                "source": {
                    "$ref": "#/definitions/DSWorkflowVariableSourceTypes.Variable",
                    "description": ""
                },
                "stepId": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": "The Step Id of the workflow step in the workflow instance"
                }
            },
            "required": [
                "source",
                "key",
                "propertyName",
                "stepId"
            ],
            "type": "object",
            "x-ds-definition-name": "DSWorkflowVariableFromVariable",
            "x-ms-summary": "A Maestro workflow [variable](/docs/maestro-api/maestro101/variables/)"
        },
        "DSWorkflowVariableRecord": {
            "additionalProperties": {
                "description": "Reference of #/definitions/DSWorkflowVariable. DS Workflow Variables",
                "type": "object"
            },
            "description": "A Maestro workflow\n[variable record](/docs/maestro-api/maestro101/variables/)",
            "type": "object",
            "x-ds-definition-name": "DSWorkflowVariableRecord",
            "x-ms-summary": "A Maestro workflow\n[variable record](/docs/maestro-api/maestro101/variables/)"
        },
        "DSWorkflowVariableSourceTypes.Step": {
            "enum": [
                "step"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowVariableSourceTypes.Step",
            "description": "",
            "x-ms-summary": ""
        },
        "DSWorkflowVariableSourceTypes.Variable": {
            "enum": [
                "variable"
            ],
            "type": "string",
            "x-ds-definition-name": "DSWorkflowVariableSourceTypes.Variable",
            "description": "",
            "x-ms-summary": ""
        },
        "DeployRequest": {
            "properties": {
                "deploymentStatus": {
                    "$ref": "#/definitions/DeployStatus",
                    "description": ""
                }
            },
            "required": [
                "deploymentStatus"
            ],
            "type": "object",
            "x-ds-definition-name": "DeployRequest",
            "description": "",
            "x-ms-summary": ""
        },
        "DeployResponse": {
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Human-readable description of the error."
                },
                "method": {
                    "type": "string",
                    "description": ""
                },
                "pollUrl": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URL to poll the request."
                },
                "receivedTime": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                }
            },
            "required": [
                "message",
                "pollUrl"
            ],
            "type": "object",
            "x-ds-definition-name": "DeployResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "DeployStatus": {
            "enum": [
                "Publish",
                "UnPublish",
                "Disable"
            ],
            "type": "string",
            "x-ds-definition-name": "DeployStatus",
            "description": "",
            "x-ms-summary": ""
        },
        "DeploymentStatus": {
            "description": "The workflow deployment status",
            "enum": [
                "Deployment In Progress",
                "Deployed",
                "Failed",
                "Delete in Progress",
                "Deleted",
                "Not Deployed",
                "Unpublish in Progress",
                "Unpublished"
            ],
            "type": "string",
            "x-ds-definition-name": "DeploymentStatus",
            "x-ms-summary": "The workflow deployment status"
        },
        "DsStepId": {
            "description": "DS Step Id <TODO>",
            "format": "uuid",
            "type": "string",
            "x-ds-definition-name": "DsStepId",
            "x-ms-summary": "DS Step Id <TODO>"
        },
        "ESignDocumentFromESignTemplate": {
            "properties": {
                "eSignTemplateId": {
                    "type": "string",
                    "description": ""
                },
                "fileExtension": {
                    "$ref": "#/definitions/DSWorkflowDocGenDocOutputFormat",
                    "description": ""
                },
                "name": {
                    "description": "The workflow step name where the error occurred",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/ESignDocumentTypes.FromDSTemplate",
                    "description": ""
                }
            },
            "required": [
                "type",
                "eSignTemplateId",
                "fileExtension",
                "name"
            ],
            "type": "object",
            "x-ds-definition-name": "ESignDocumentFromESignTemplate",
            "description": "",
            "x-ms-summary": ""
        },
        "ESignDocumentFromPreviousStep": {
            "properties": {
                "documentFromPreviousStep": {
                    "description": "",
                    "type": "object"
                },
                "fileExtension": {
                    "$ref": "#/definitions/DSWorkflowDocGenDocOutputFormat",
                    "description": ""
                },
                "name": {
                    "description": "The workflow step name where the error occurred",
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/ESignDocumentTypes.FromPreviousStep",
                    "description": ""
                }
            },
            "required": [
                "type",
                "documentFromPreviousStep",
                "fileExtension",
                "name"
            ],
            "type": "object",
            "x-ds-definition-name": "ESignDocumentFromPreviousStep",
            "description": "",
            "x-ms-summary": ""
        },
        "ESignDocumentTypes.FromDSTemplate": {
            "enum": [
                "FromDSTemplate"
            ],
            "type": "string",
            "x-ds-definition-name": "ESignDocumentTypes.FromDSTemplate",
            "description": "",
            "x-ms-summary": ""
        },
        "ESignDocumentTypes.FromPreviousStep": {
            "enum": [
                "FromPreviousStep"
            ],
            "type": "string",
            "x-ds-definition-name": "ESignDocumentTypes.FromPreviousStep",
            "description": "",
            "x-ms-summary": ""
        },
        "ESignDocuments": {
            "description": "ESignDocument Object. This object should be any of the following object models: [#/definitions/ESignDocumentFromPreviousStep, #/definitions/ESignDocumentFromESignTemplate]",
            "x-ds-definition-name": "ESignDocuments",
            "x-ms-summary": "ESignDocument Object. This object should be any of the following object models: [#/definitions/ESignDocumentFromPreviousStep, #/definitions/ESignDocumentFromESignTemplate]"
        },
        "ESignLocalePolicy": {
            "additionalProperties": {
                "type": "object"
            },
            "type": "object",
            "x-ds-definition-name": "ESignLocalePolicy",
            "description": "",
            "x-ms-summary": ""
        },
        "ESignSigner": {
            "properties": {
                "email": {
                    "description": "",
                    "type": "object"
                },
                "note": {
                    "description": "",
                    "type": "object"
                },
                "routingOrder": {
                    "type": "string",
                    "description": ""
                },
                "tabs": {
                    "$ref": "#/definitions/ESignTabsRecord",
                    "description": ""
                },
                "userName": {
                    "description": "",
                    "type": "object"
                }
            },
            "required": [
                "userName",
                "email",
                "routingOrder",
                "note",
                "tabs"
            ],
            "type": "object",
            "x-ds-definition-name": "ESignSigner",
            "description": "",
            "x-ms-summary": ""
        },
        "ESignTabs": {
            "properties": {
                "anchorString": {
                    "type": "string",
                    "description": ""
                },
                "bold": {
                    "type": "string",
                    "description": ""
                },
                "documentId": {
                    "type": "string",
                    "description": ""
                },
                "font": {
                    "type": "string",
                    "description": ""
                },
                "fontColor": {
                    "type": "string",
                    "description": ""
                },
                "fontSize": {
                    "type": "string",
                    "description": ""
                },
                "height": {
                    "type": "string",
                    "description": ""
                },
                "italic": {
                    "type": "string",
                    "description": ""
                },
                "localePolicy": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": "The workflow step name where the error occurred"
                },
                "optional": {
                    "type": "string",
                    "description": ""
                },
                "pageNumber": {
                    "type": "string",
                    "description": ""
                },
                "recipientId": {
                    "type": "string",
                    "description": ""
                },
                "scaleValue": {
                    "type": "string",
                    "description": ""
                },
                "stampType": {
                    "type": "string",
                    "description": ""
                },
                "tabId": {
                    "type": "string",
                    "description": ""
                },
                "tabLabel": {
                    "type": "string",
                    "description": ""
                },
                "tabType": {
                    "type": "string",
                    "description": ""
                },
                "templateLocked": {
                    "type": "string",
                    "description": ""
                },
                "templateRequired": {
                    "type": "string",
                    "description": ""
                },
                "tooltip": {
                    "type": "string",
                    "description": ""
                },
                "underline": {
                    "type": "string",
                    "description": ""
                },
                "value": {
                    "description": "Array of workflow definition metadata",
                    "type": "object"
                },
                "width": {
                    "type": "string",
                    "description": ""
                },
                "xPosition": {
                    "type": "string",
                    "description": ""
                },
                "yPosition": {
                    "type": "string",
                    "description": ""
                }
            },
            "required": [
                "tabId"
            ],
            "type": "object",
            "x-ds-definition-name": "ESignTabs",
            "description": "",
            "x-ms-summary": ""
        },
        "ESignTabsRecord": {
            "properties": {
                "dateSignedTabs": {
                    "items": {
                        "$ref": "#/definitions/ESignTabs"
                    },
                    "type": "array",
                    "description": ""
                },
                "emailAddressTabs": {
                    "items": {
                        "$ref": "#/definitions/ESignTabs"
                    },
                    "type": "array",
                    "description": ""
                },
                "firstNameTabs": {
                    "items": {
                        "$ref": "#/definitions/ESignTabs"
                    },
                    "type": "array",
                    "description": ""
                },
                "fullNameTabs": {
                    "items": {
                        "$ref": "#/definitions/ESignTabs"
                    },
                    "type": "array",
                    "description": ""
                },
                "lastNameTabs": {
                    "items": {
                        "$ref": "#/definitions/ESignTabs"
                    },
                    "type": "array",
                    "description": ""
                },
                "signHereTabs": {
                    "items": {
                        "$ref": "#/definitions/ESignTabs"
                    },
                    "type": "array",
                    "description": ""
                },
                "textTabs": {
                    "items": {
                        "$ref": "#/definitions/ESignTabs"
                    },
                    "type": "array",
                    "description": ""
                }
            },
            "type": "object",
            "x-ds-definition-name": "ESignTabsRecord",
            "description": "",
            "x-ms-summary": ""
        },
        "ErrorCodes": {
            "description": "Internal Error Codes",
            "enum": [
                "ERR_10001",
                "ERR_10002",
                "ERR_10003",
                "ERR_10004",
                "ERR_10005",
                "ERR_10006",
                "ERR_10007",
                "ERR_10008",
                "ERR_10009",
                "ERR_10101",
                "ERR_10201",
                "ERR_10202",
                "ERR_10301",
                "ERR_10302",
                "ERR_10401",
                "ERR_10801",
                "ERR_10802",
                "ERR_10999"
            ],
            "type": "string",
            "x-ds-definition-name": "ErrorCodes",
            "x-ms-summary": "Internal Error Codes"
        },
        "ErrorResponse": {
            "description": "Returns error with a status message",
            "properties": {
                "errorCode": {
                    "$ref": "#/definitions/ErrorCodes",
                    "description": ""
                },
                "message": {
                    "type": "string",
                    "description": "Human-readable description of the error."
                }
            },
            "type": "object",
            "x-ds-definition-name": "ErrorResponse",
            "x-ms-summary": "Returns error with a status message"
        },
        "EventTypes": {
            "description": "The Trigger Event types",
            "enum": [
                "envelope-sent",
                "envelope-delivered",
                "envelope-completed",
                "envelope-declined",
                "envelope-voided",
                "envelope-created",
                "envelope-resent",
                "envelope-corrected",
                "envelope-purge",
                "envelope-deleted",
                "envelope-discard",
                "Delivery Failed",
                "Authentication Failed",
                "Sent",
                "Delivered",
                "Signed",
                "Completed"
            ],
            "type": "string",
            "x-ds-definition-name": "EventTypes",
            "x-ms-summary": "The Trigger Event types"
        },
        "GetConfigurationInstanceResponse": {
            "properties": {
                "savedValues": {
                    "additionalProperties": true,
                    "type": "object",
                    "description": ""
                },
                "stepId": {
                    "format": "uuid",
                    "type": "string",
                    "description": "The Step Id of the workflow step in the workflow instance"
                },
                "workflowDefinitionId": {
                    "format": "uuid",
                    "type": "string",
                    "description": "Workflow definition ID."
                }
            },
            "type": "object",
            "x-ds-definition-name": "GetConfigurationInstanceResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "GetConfigurationInstancesResponse": {
            "properties": {
                "configInstances": {
                    "items": {
                        "properties": {
                            "savedValues": {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "stepId": {
                                "format": "uuid",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array",
                    "description": ""
                },
                "count": {
                    "type": "number",
                    "description": "Total number of definitions returned"
                },
                "workflowDefinitionId": {
                    "format": "uuid",
                    "type": "string",
                    "description": "Workflow definition ID."
                }
            },
            "type": "object",
            "x-ds-definition-name": "GetConfigurationInstancesResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "HttpTypes": {
            "description": "The Trigger Http types",
            "enum": [
                "Get",
                "Post",
                "Put",
                "Delete"
            ],
            "type": "string",
            "x-ds-definition-name": "HttpTypes",
            "x-ms-summary": "The Trigger Http types"
        },
        "InvalidWorkflowResponse": {
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Human-readable description of the error."
                },
                "validationErrors": {
                    "items": {
                        "$ref": "#/definitions/ValidationErrors"
                    },
                    "type": "array",
                    "description": "An array of validation errors."
                }
            },
            "required": [
                "message",
                "validationErrors"
            ],
            "type": "object",
            "x-ds-definition-name": "InvalidWorkflowResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "LastDeployedId": {
            "example": "64655d8192f160c93b2366a1",
            "format": "string",
            "type": "string",
            "x-ds-definition-name": "LastDeployedId",
            "description": "",
            "x-ms-summary": ""
        },
        "NewOrUpdatedWorkflowDefinitionResponse": {
            "properties": {
                "isValidWorkflowDefinition": {
                    "type": "boolean",
                    "description": "**True** if this is a valid workflow definition."
                },
                "validationErrors": {
                    "items": {
                        "$ref": "#/definitions/ValidationErrors"
                    },
                    "type": "array",
                    "description": "An array of validation errors."
                },
                "workflowDefinition": {
                    "$ref": "#/definitions/WorkflowDefinition",
                    "description": "The workflow definition."
                },
                "workflowDefinitionId": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": "Workflow definition ID."
                }
            },
            "required": [
                "workflowDefinitionId",
                "workflowDefinition",
                "isValidWorkflowDefinition",
                "validationErrors"
            ],
            "type": "object",
            "x-ds-definition-name": "NewOrUpdatedWorkflowDefinitionResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "NumberOrVariable": {
            "description": "Object stands for a number or a Variable. This object should be any of the following object models or types: [number, #/definitions/DSWorkflowVariable]",
            "x-ds-definition-name": "NumberOrVariable",
            "x-ms-summary": "Object stands for a number or a Variable. This object should be any of the following object models or types: [number, #/definitions/DSWorkflowVariable]"
        },
        "Participant": {
            "description": "A Maestro workflow\n[participant](/docs/maestro-api/maestro101/participants/).",
            "properties": {
                "participantEmail": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": ""
                },
                "participantFirstName": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": ""
                },
                "participantLastName": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": ""
                },
                "participantRole": {
                    "type": "string",
                    "description": ""
                }
            },
            "required": [
                "participantRole",
                "participantEmail",
                "participantFirstName",
                "participantLastName"
            ],
            "type": "object",
            "x-ds-definition-name": "Participant",
            "x-ms-summary": "A Maestro workflow\n[participant](/docs/maestro-api/maestro101/participants/)."
        },
        "ProgressInstance": {
            "description": "The progress information for a workflow instance",
            "properties": {
                "completedSteps": {
                    "description": "The number of completed steps for this workflow instance",
                    "type": "number"
                },
                "currentCompletedStepName": {
                    "description": "The last completed step name",
                    "type": "string"
                },
                "totalSteps": {
                    "description": "The total number of steps for this workflow instance",
                    "type": "number"
                }
            },
            "type": "object",
            "x-ds-definition-name": "ProgressInstance",
            "x-ms-summary": "The progress information for a workflow instance"
        },
        "RecordStringBoolean": {
            "additionalProperties": {
                "type": "boolean"
            },
            "type": "object",
            "x-ds-definition-name": "RecordStringBoolean",
            "description": "",
            "x-ms-summary": ""
        },
        "RecordStringOrVariableOrTransformation": {
            "additionalProperties": {
                "description": "Reference of #/definitions/StringOrVariableOrTransformation. Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
                "type": "object"
            },
            "description": "A Record of strings to Strings, Variables, or Transformation Expressions",
            "type": "object",
            "x-ds-definition-name": "RecordStringOrVariableOrTransformation",
            "x-ms-summary": "A Record of strings to Strings, Variables, or Transformation Expressions"
        },
        "RecordToNever": {
            "additionalProperties": false,
            "type": "object",
            "x-ds-definition-name": "RecordToNever",
            "description": "",
            "x-ms-summary": ""
        },
        "ReplicationStatus": {
            "description": "The workflow replication status",
            "enum": [
                "Deploy Replication In Progress",
                "Deploy Replicated",
                "Deploy Replication Failed",
                "Not Replicated",
                "Delete Replication in Progress",
                "Delete Replicated",
                "Delete Replication Failed",
                "Unpublish replication in Progress",
                "Unpublish Replicated",
                "Unpublish Replication Failed"
            ],
            "type": "string",
            "x-ds-definition-name": "ReplicationStatus",
            "x-ms-summary": "The workflow replication status"
        },
        "StartedByInstance": {
            "description": "The started by information for a workflow instance",
            "properties": {
                "startedById": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": ""
                },
                "startedByName": {
                    "description": "The user name of the person who starts a workflow Instance",
                    "type": "string"
                },
                "startedByType": {
                    "enum": [
                        "Anonymous",
                        "Preparer",
                        "Participant",
                        "OnBehalfOf"
                    ],
                    "type": "string",
                    "description": ""
                }
            },
            "type": "object",
            "x-ds-definition-name": "StartedByInstance",
            "x-ms-summary": "The started by information for a workflow instance"
        },
        "StringOrVariableOrTransformation": {
            "description": "Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]",
            "x-ds-definition-name": "StringOrVariableOrTransformation",
            "x-ms-summary": "Object stands for a String or a Variable or a Transformation. This object should be any of the following object models or types: [string, #/definitions/DSWorkflowVariable, #/definitions/DSWorkflowTransformationExpression]"
        },
        "SuccessMessageResponse": {
            "description": "Returns success with a status message",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Human-readable description of the error."
                }
            },
            "type": "object",
            "x-ds-definition-name": "SuccessMessageResponse",
            "x-ms-summary": "Returns success with a status message"
        },
        "TemplateId": {
            "description": "Workflow definition ID.",
            "example": "00000000-0000-0000-0000-000000000000",
            "format": "uuid",
            "type": "string",
            "x-ds-definition-name": "TemplateId",
            "x-ms-summary": "Workflow definition ID."
        },
        "TriggerPayload": {
            "description": "JSON payload that will be passed to the triggered workflow",
            "properties": {
                "instanceName": {
                    "type": "string",
                    "description": "The friendly name of the particular workflow instance"
                },
                "metadata": {
                    "type": "object",
                    "description": ""
                },
                "participants": {
                    "type": "object",
                    "description": ""
                },
                "payload": {
                    "type": "object",
                    "description": ""
                }
            },
            "type": "object",
            "x-ds-definition-name": "TriggerPayload",
            "x-ms-summary": "JSON payload that will be passed to the triggered workflow"
        },
        "TriggerWorkflowViaPostResponse": {
            "description": "Trigger workflow via POST response details",
            "properties": {
                "instanceId": {
                    "$ref": "#/definitions/WorkflowInstanceId",
                    "description": "Workflow instance ID. <!-- dacid -->\nA string in UUID format: 4a6d6a08-xxxx-xxxx-xxxx-bae4fecc99c8\n"
                },
                "workflowInstanceUrl": {
                    "description": "Instance-specific URL that can be used redirect to a workflow instance",
                    "format": "uri",
                    "type": "string"
                }
            },
            "type": "object",
            "x-ds-definition-name": "TriggerWorkflowViaPostResponse",
            "x-ms-summary": "Trigger workflow via POST response details"
        },
        "UserId": {
            "description": "Participant User ID",
            "format": "uuid",
            "type": "string",
            "x-ds-definition-name": "UserId",
            "x-ms-summary": "Participant User ID"
        },
        "ValidationErrors": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Error code message"
                },
                "message": {
                    "type": "string",
                    "description": "Human-readable description of the error."
                }
            },
            "required": [
                "message",
                "code"
            ],
            "type": "object",
            "x-ds-definition-name": "ValidationErrors",
            "description": "",
            "x-ms-summary": ""
        },
        "VersionString": {
            "example": "1.0.0",
            "type": "string",
            "x-ds-definition-name": "VersionString",
            "description": "A string in version number format: `3.14.159`",
            "x-ms-summary": "A string in version number format: `3.14.159`"
        },
        "WorkflowCreatorId": {
            "description": "The Docusign Admin user ID who has the ability to create workflow definitions.",
            "example": "00000000-0000-0000-0000-000000000000",
            "format": "uuid",
            "type": "string",
            "x-ds-definition-name": "WorkflowCreatorId",
            "x-ms-summary": "The Docusign Admin user ID who has the ability to create workflow definitions."
        },
        "WorkflowDateTime": {
            "format": "date-time",
            "type": "string",
            "x-ds-definition-name": "WorkflowDateTime",
            "description": "A date-time string.",
            "x-ms-summary": "A date-time string."
        },
        "WorkflowDefinition": {
            "description": "A Maestro workflow definition.",
            "properties": {
                "accountId": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": "The account ID."
                },
                "createdByName": {
                    "description": "The name of the user who created this workflow definition",
                    "type": "string"
                },
                "documentVersion": {
                    "$ref": "#/definitions/VersionString",
                    "description": "The document version number.\n\nExample: 1.2.7"
                },
                "participants": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Participant"
                    },
                    "description": "A maestro [participant](/docs/maestro-api/maestro101/participants/) record",
                    "type": "object"
                },
                "schemaVersion": {
                    "$ref": "#/definitions/VersionString",
                    "description": ""
                },
                "steps": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array",
                    "description": ""
                },
                "trigger": {
                    "$ref": "#/definitions/DSWorkflowTrigger",
                    "description": ""
                },
                "variables": {
                    "additionalProperties": {
                        "description": "Reference of #/definitions/DSWorkflowVariable. DS Workflow Variables",
                        "type": "object"
                    },
                    "description": "",
                    "type": "object"
                },
                "workflowDescription": {
                    "type": "string",
                    "description": "A human-readable description of the workflow."
                },
                "workflowName": {
                    "type": "string",
                    "description": "The human-readable name of the workflow."
                }
            },
            "required": [
                "workflowName",
                "workflowDescription",
                "documentVersion",
                "schemaVersion",
                "accountId",
                "trigger",
                "variables",
                "steps"
            ],
            "type": "object",
            "x-ds-definition-name": "WorkflowDefinition",
            "x-ms-summary": "A Maestro workflow definition."
        },
        "WorkflowDefinitionList": {
            "description": "Returns a list of workflow definitions' metadata (0 or more).",
            "properties": {
                "count": {
                    "description": "Total number of definitions returned",
                    "example": 1,
                    "type": "number"
                },
                "value": {
                    "description": "Array of workflow definition metadata",
                    "items": {
                        "$ref": "#/definitions/WorkflowDefinitionMetadata"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-ds-definition-name": "WorkflowDefinitionList",
            "x-ms-summary": "Returns a list of workflow definitions' metadata (0 or more)."
        },
        "WorkflowDefinitionMetadata": {
            "description": "A Maestro workflow definition's metadata.",
            "properties": {
                "accountId": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": "The account ID."
                },
                "createdDate": {
                    "description": "The date the workflow was created",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/AowUUID",
                    "description": ""
                },
                "isDraft": {
                    "type": "boolean",
                    "description": "**True,** if this definition is a draft."
                },
                "lastDeployedId": {
                    "$ref": "#/definitions/LastDeployedId",
                    "description": "The ID of the deployed workflow definition."
                },
                "lastDeployedVersion": {
                    "type": "string",
                    "description": ""
                },
                "lastUpdatedDate": {
                    "description": "The date the workflow was last updated",
                    "format": "date-time",
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The workflow step name where the error occurred"
                },
                "status": {
                    "$ref": "#/definitions/WorkflowMetadataStatus",
                    "description": "Workflow definition metadata status. <!-- filter -->"
                },
                "triggerUrl": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URL you will use to [trigger the worflow](/docs/maestro-api/how-to/trigger-workflow/)."
                }
            },
            "required": [
                "id"
            ],
            "type": "object",
            "x-ds-definition-name": "WorkflowDefinitionMetadata",
            "x-ms-summary": "A Maestro workflow definition's metadata."
        },
        "WorkflowDefinitionWithId": {
            "description": "A Maestro workflow definition with metadata.",
            "properties": {
                "accountId": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": "The account ID."
                },
                "createdDate": {
                    "description": "The date the workflow was created",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/AowUUID",
                    "description": "The work definition ID."
                },
                "isDraft": {
                    "type": "boolean",
                    "description": "**True,** if this definition is a draft."
                },
                "lastDeployedId": {
                    "$ref": "#/definitions/LastDeployedId",
                    "description": "The ID of the deployed workflow definition."
                },
                "lastDeployedVersion": {
                    "type": "string",
                    "description": "The version number of the last deployed workflow."
                },
                "lastDeployedWorkflowDefinition": {
                    "$ref": "#/definitions/WorkflowDefinition",
                    "description": "The workflow definition oof the the last deployed workflow."
                },
                "lastUpdatedDate": {
                    "description": "The date the workflow was last updated",
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/WorkflowMetadataStatus",
                    "description": "Workflow definition metadata status. <!-- filter -->"
                },
                "triggerUrl": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URL you will use to [trigger the worflow](/docs/maestro-api/how-to/trigger-workflow/)."
                },
                "validationErrors": {
                    "items": {
                        "$ref": "#/definitions/ValidationErrors"
                    },
                    "type": "array",
                    "description": "An array of validation errors."
                },
                "workflowDefinition": {
                    "$ref": "#/definitions/WorkflowDefinition",
                    "description": "The workflow definition."
                }
            },
            "required": [
                "id"
            ],
            "type": "object",
            "x-ds-definition-name": "WorkflowDefinitionWithId",
            "x-ms-summary": "A Maestro workflow definition with metadata."
        },
        "WorkflowDeleteResponse": {
            "properties": {
                "pollUrl": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URL to poll the request."
                },
                "workflowDefinitionId": {
                    "$ref": "#/definitions/AowUUIDString",
                    "description": "Workflow definition ID."
                }
            },
            "required": [
                "workflowDefinitionId",
                "pollUrl"
            ],
            "type": "object",
            "x-ds-definition-name": "WorkflowDeleteResponse",
            "description": "The response to a request to delete a workflow.",
            "x-ms-summary": "The response to a request to delete a workflow."
        },
        "WorkflowInstance": {
            "description": "Details of a workflow instance triggered for a workflow definition.",
            "properties": {
                "accountId": {
                    "$ref": "#/definitions/AccountId",
                    "description": "The account ID."
                },
                "creatorId": {
                    "$ref": "#/definitions/WorkflowCreatorId",
                    "description": "The Docusign Admin user ID who has the ability to create workflow definitions."
                },
                "dacId": {
                    "$ref": "#/definitions/WorkflowInstanceId",
                    "description": "Workflow instance ID.\nA string in UUID format: 4a6d6a08-xxxx-xxxx-xxxx-bae4fecc99c8"
                },
                "endDate": {
                    "$ref": "#/definitions/WorkflowDateTime",
                    "description": "Track the End time of the Workflow Instance"
                },
                "instanceName": {
                    "description": "The friendly name of the particular workflow instance",
                    "type": "string"
                },
                "instanceState": {
                    "$ref": "#/definitions/WorkflowInstanceState",
                    "description": "Current workflow instance state. One of:\n\n- `completed`\n- `failed`\n- `In-progress`\n"
                },
                "progress": {
                    "$ref": "#/definitions/ProgressInstance",
                    "description": "The state of progress of\nthe instance."
                },
                "startDate": {
                    "$ref": "#/definitions/WorkflowDateTime",
                    "description": "The start time of the workflow instance"
                },
                "startedBy": {
                    "$ref": "#/definitions/StartedByInstance",
                    "description": ""
                },
                "templateId": {
                    "$ref": "#/definitions/TemplateId",
                    "description": ""
                },
                "users": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "Contains the list of Users and Steps mapping"
                }
            },
            "required": [
                "templateId",
                "dacId",
                "creatorId",
                "users",
                "instanceState"
            ],
            "type": "object",
            "x-ds-definition-name": "WorkflowInstance",
            "x-ms-summary": "Details of a workflow instance triggered for a workflow definition."
        },
        "WorkflowInstanceId": {
            "description": "Workflow instance ID.\nA string in UUID format: 4a6d6a08-xxxx-xxxx-xxxx-bae4fecc99c8",
            "example": "00000000-0000-0000-0000-000000000000",
            "format": "uuid",
            "type": "string",
            "x-ds-definition-name": "WorkflowInstanceId",
            "x-ms-summary": "Workflow instance ID.\nA string in UUID format: 4a6d6a08-xxxx-xxxx-xxxx-bae4fecc99c8"
        },
        "WorkflowInstanceMap": {
            "additionalProperties": {
                "type": "string"
            },
            "type": "object",
            "x-ds-definition-name": "WorkflowInstanceMap",
            "description": "",
            "x-ms-summary": ""
        },
        "WorkflowInstanceState": {
            "description": "Current workflow instance state (`completed`, `failed`, `In-progress`)",
            "enum": [
                "Created",
                "In Progress",
                "Completed",
                "Failed",
                "Canceled"
            ],
            "type": "string",
            "x-ds-definition-name": "WorkflowInstanceState",
            "x-ms-summary": "Current workflow instance state (`completed`, `failed`, `In-progress`)"
        },
        "WorkflowInstancesList": {
            "description": "A list of zero or more workflow instances.",
            "items": {
                "$ref": "#/definitions/WorkflowInstance"
            },
            "type": "array",
            "x-ds-definition-name": "WorkflowInstancesList",
            "x-ms-summary": "A list of zero or more workflow instances."
        },
        "WorkflowMetadataStatus": {
            "description": "Workflow definition metadata status.",
            "enum": [
                "active",
                "inactive",
                "publishing",
                "unpublishing",
                "archived",
                "archiving"
            ],
            "type": "string",
            "x-ds-definition-name": "WorkflowMetadataStatus",
            "x-ms-summary": "Workflow definition metadata status."
        },
        "WorkflowStepError": {
            "description": "Workflow step history error",
            "properties": {
                "code": {
                    "description": "Error code message",
                    "type": "string"
                },
                "endTime": {
                    "$ref": "#/definitions/WorkflowDateTime",
                    "description": "Track the End time of the error retry/processed"
                },
                "error": {
                    "properties": {
                        "code": {
                            "description": "The Error Code Message",
                            "type": "string"
                        },
                        "message": {
                            "description": "Error Message which shares more details",
                            "type": "string"
                        }
                    },
                    "type": "object",
                    "description": ""
                },
                "name": {
                    "description": "The workflow step name where the error occurred",
                    "type": "string"
                },
                "startTime": {
                    "$ref": "#/definitions/WorkflowDateTime",
                    "description": "Track Start time of the error occurred"
                }
            },
            "type": "object",
            "x-ds-definition-name": "WorkflowStepError",
            "x-ms-summary": "Workflow step history error"
        },
        "WorkflowStepHistory": {
            "description": "Details (history) of a workflow instance step.",
            "properties": {
                "accountId": {
                    "$ref": "#/definitions/AccountId",
                    "description": "The account ID."
                },
                "dacId": {
                    "$ref": "#/definitions/WorkflowInstanceId",
                    "description": ""
                },
                "dsStepId": {
                    "$ref": "#/definitions/DsStepId",
                    "description": ""
                },
                "endDate": {
                    "$ref": "#/definitions/WorkflowDateTime",
                    "description": "Track the End time of the Workflow Step"
                },
                "error": {
                    "$ref": "#/definitions/WorkflowStepError",
                    "description": ""
                },
                "outputModuleProperties": {
                    "additionalProperties": true,
                    "type": "object",
                    "description": ""
                },
                "startDate": {
                    "$ref": "#/definitions/WorkflowDateTime",
                    "description": "Track the Start time of the Workflow Step"
                },
                "stepId": {
                    "$ref": "#/definitions/AowUUID",
                    "description": "The Step Id of the workflow step in the workflow instance"
                },
                "stepName": {
                    "description": "Name of the workflow step (DS Scope)",
                    "type": "string"
                },
                "stepState": {
                    "$ref": "#/definitions/WorkflowStepHistoryState",
                    "description": ""
                },
                "userId": {
                    "$ref": "#/definitions/UserId",
                    "description": ""
                }
            },
            "required": [
                "dacId",
                "stepName",
                "stepState",
                "userId"
            ],
            "type": "object",
            "x-ds-definition-name": "WorkflowStepHistory",
            "x-ms-summary": "Details (history) of a workflow instance step."
        },
        "WorkflowStepHistoryList": {
            "description": "Returns the history of the workflow instance steps.",
            "items": {
                "$ref": "#/definitions/WorkflowStepHistory"
            },
            "type": "array",
            "x-ds-definition-name": "WorkflowStepHistoryList",
            "x-ms-summary": "Returns the history of the workflow instance steps."
        },
        "WorkflowStepHistoryState": {
            "description": "Workflow step history state (`completed`, `failed`, `In-progress`)",
            "enum": [
                "In Progress",
                "Completed",
                "Failed",
                "Canceled"
            ],
            "type": "string",
            "x-ds-definition-name": "WorkflowStepHistoryState",
            "x-ms-summary": "Workflow step history state (`completed`, `failed`, `In-progress`)"
        },
        "WorkflowTrigger": {
            "description": "Method to trigger a workflow.",
            "properties": {
                "instanceId": {
                    "$ref": "#/definitions/WorkflowInstanceId",
                    "description": "Workflow instance ID. <!-- dacid -->\nA string in UUID format: 4a6d6a08-xxxx-xxxx-xxxx-bae4fecc99c8\n"
                },
                "workflowInstanceUrl": {
                    "description": "Instance-specific URL that can be used redirect to a workflow instance",
                    "format": "uri",
                    "type": "string"
                }
            },
            "type": "object",
            "x-ds-definition-name": "TriggerWorkflowViaPostResponse",
            "x-ds-category": "WorkflowTrigger",
            "x-ds-order": "100",
            "x-ms-summary": "Method to trigger a workflow."
        },
        "WorkflowInstanceManagement": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Error code message"
                },
                "message": {
                    "type": "string",
                    "description": "Human-readable description of the error."
                }
            },
            "required": [
                "message"
            ],
            "type": "object",
            "x-ds-definition-name": "CancelResponse",
            "description": "Methods to get information about workflow instances.",
            "x-ds-category": "WorkflowInstanceManagement",
            "x-ds-order": "100",
            "x-ms-summary": "Methods to get information about workflow instances."
        },
        "WorkflowManagement": {
            "description": "Methods to create, retrieve, update, and delete workflow definitions.",
            "items": {
                "$ref": "#/definitions/WorkflowStepHistory"
            },
            "type": "array",
            "x-ds-definition-name": "WorkflowStepHistoryList",
            "x-ds-category": "WorkflowManagement",
            "x-ds-order": "100",
            "x-ms-summary": "Methods to create, retrieve, update, and delete workflow definitions."
        }
    },
    "securityDefinitions": {
        "DSAuth": {
            "authorizationUrl": "https://account-tk1.tk.docusign.dev/oauth/auth",
            "description": "Docusign AuthN/AuthZ",
            "flow": "accessCode",
            "scopes": {
                "aow_manage": "Manage workflows scope",
                "signature": "Using signature scope"
            },
            "tokenUrl": "https://account-tk1.tk.docusign.dev/oauth/token",
            "type": "oauth2"
        },
        "DSBearerAuth": {
            "in": "header",
            "name": "Authorization",
            "type": "apiKey"
        }
    },
    "externalDocs": {
        "description": "Maestro API Documentation",
        "url": "https://developers.docusign.com/docs/maestro-api/"
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [
        {
            "name": "WorkflowTrigger",
            "description": "Method to trigger a workflow."
        },
        {
            "name": "WorkflowInstanceManagement",
            "description": "Methods to get information about workflow instances."
        },
        {
            "name": "WorkflowManagement",
            "description": "Returns the history of the workflow instance steps."
        }
    ],
    "x-ds-categories": [
        {
            "name": "WorkflowTrigger",
            "summary": "Method to trigger a workflow.",
            "description": "Method to trigger a workflow."
        },
        {
            "name": "WorkflowInstanceManagement",
            "summary": "Methods to get information about workflow instances.",
            "description": "Methods to get information about workflow instances."
        },
        {
            "name": "WorkflowManagement",
            "summary": "Methods to create, retrieve, update, and delete workflow definitions.",
            "description": "Methods to create, retrieve, update, and delete workflow definitions."
        }
    ]
}
