{
    "swagger": "2.0",
    "info": {
        "version": "v2.1",
        "title": "DocuSign Admin API",
        "description": "An API for an organization administrator to manage organizations, accounts and users",
        "contact": {
            "name": "DocuSign Developer Center",
            "url": "https://developers.docusign.com",
            "email": "devcenter@docusign.com"
        },
        "termsOfService": "https://www.docusign.com/company/terms-and-conditions/developers"
    },
    "host": "api.docusign.net",
    "basePath": "/Management",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/v2/organizations": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Returns a list of organizations that the authenticated user belongs to.",
                "description": "Returns a list of organizations that the authenticated user belongs to.\n\n- Required scopes: `organization_read`.\n\nNote that the DocuSign Admin API only returns JSON, not XML.",
                "operationId": "Organization_Organization_GetListV2",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "Specifies how to select the organizations. Valid values:\n\n- `org_admin`: Returns organizations for which the authenticated user is an admin.\n- `account_membership`: Returns organizations that contain an account of which the authenticated user is a member\n\nDefault value: `org_admin`",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "organization_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getOrganizations",
                "x-ds-method": "getOrganizations",
                "x-ds-service": "Accounts",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/accounts/{accountId}/permissions": {
            "get": {
                "tags": [
                    "eSignUserManagement"
                ],
                "summary": "Returns the list of permission profiles in an account.",
                "description": "Returns the list of permission profiles in an account.\n\n- Required scopes: `permission_read`\n\n",
                "operationId": "Account_Accounts_GetPermissionProfilesV2",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PermissionsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "permission_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getPermissions",
                "x-ds-method": "getPermissions",
                "x-ds-service": "Accounts",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/accounts/{accountId}/groups": {
            "get": {
                "tags": [
                    "eSignUserManagement"
                ],
                "summary": "Returns the list of groups in an account.",
                "description": "Returns the list of groups in an account.\n\n- Required scopes: `group_read`\n",
                "operationId": "Account_Accounts_GetGroupsV2",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Index of first item to include in the response. The default value is 0.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Page size of the response. The default value is 20.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "Index of the last item to include in the response. Ignored if `take` parameter is specified.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MemberGroupsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "group_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getGroups",
                "x-ds-method": "getGroups",
                "x-ds-service": "Accounts",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/exports/user_list": {
            "get": {
                "tags": [
                    "UserExport"
                ],
                "summary": "Returns a list of pending and completed export requests.",
                "description": "Returns a list of pending and completed export requests.\n\n- Required scopes: `user_read`\n",
                "operationId": "OrganizationExport_OrganizationExport_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationExportsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getUserListExports",
                "x-ds-method": "getUserListExports",
                "x-ds-service": "BulkExports",
                "x-ds-in-sdk": true
            },
            "post": {
                "tags": [
                    "UserExport"
                ],
                "summary": "Creates a user list export request.",
                "description": "Create a user list export request.\n\n- Required scopes: `user_read`\n\nThis method initiates a user list export request. You specify the type of export request as JSON in the body of method, like this:\n\n``` json\n{\n\t\"type\": \"organization_memberships_export\"\n}\n```\n\n\n\n\nThe export request type is one of three values:\n\n| Value                                      | Description                                                                                             |\n| :----------------------------------------- | :------------------------------------------------------------------------------------------------------ |\n| `organization_memberships_export`          | Every user in every account in the organization. Users in multiple accounts will appear more than once. |\n| `organization_domain_users_export`         | All users of the reserved domains.                                                                      |\n| `organization_external_memberships_export` | Users whose email address domain is *not* linked to the organization.                                   |\n",
                "operationId": "OrganizationExport_OrganizationExport_Insert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganizationExportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationExportResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "createUserListExport",
                "x-ds-method": "createUserListExport",
                "x-ds-service": "BulkExports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/exports/account_settings": {
            "get": {
                "tags": [
                    "AccountSettingsExport"
                ],
                "summary": "Returns a list of pending and completed account settings export request.",
                "description": "Returns a list of pending and completed account settings export request.\n\n- Required scopes: `account_read`\n",
                "operationId": "OrganizationExport_OrganizationExport_GetAccountCompare",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationExportsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "account_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getAccountSettingsExports",
                "x-ds-method": "getAccountSettingsExports",
                "x-ds-service": "BulkExports",
                "x-ds-in-sdk": true
            },
            "post": {
                "tags": [
                    "AccountSettingsExport"
                ],
                "summary": "Creates a  new account settings export request.",
                "description": "Creates a  new account settings export request.\n\nSpecify the accounts whose settings you are requesting as JSON in the body of method, like this:\n\n``` json\n{\n  \"accounts\":\t[\n  \t{ \"account_id\": \"9ca037f4-xxxx-xxxx-xxxx-212e57d4f22e\"},\n  \t{ \"account_id\": \"624e3e00-xxxx-xxxx-xxxx-43918c520dab\"}\n\n  ]\n}\n```\n",
                "operationId": "OrganizationExport_OrganizationExport_AccountCompare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganizationAccountsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationExportResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "account_read"
                        ]
                    }
                ],
                "x-ds-methodname": "createAccountSettingsExport",
                "x-ds-method": "createAccountSettingsExport",
                "x-ds-service": "BulkExports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/exports/user_list/{exportId}": {
            "get": {
                "tags": [
                    "UserExport"
                ],
                "summary": "Returns the results for single user list export request.",
                "description": "Returns the results for single user list export request.\n\n- Required scopes: `user_read`\n\nGiven an export id, this method returns the results of a single user list export request.\nTo get a list of all the export requests, use `getUserListExports`.\n\nNote that the `metadata_url` property of the response from `createUserListExport` is a read-to-use HTTP GET request to get the status.\n\nYou can find the actual list of users at  `results[n].url` in the response.",
                "operationId": "OrganizationExport_OrganizationExport_GetByExportId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "The export ID GUID for the request.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationExportResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getUserListExport",
                "x-ds-method": "getUserListExport",
                "x-ds-service": "BulkExports",
                "x-ds-in-sdk": true
            },
            "delete": {
                "tags": [
                    "UserExport"
                ],
                "summary": "Deletes a single user list export request.",
                "description": "Deletes a single user list export request.\nUse this method to delete pending or completed user export requests.\n\n- Required scopes: `user_read`\n\n",
                "operationId": "OrganizationExport_OrganizationExport_DeleteByExportId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "The export ID GUID for the request.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "deleteUserListExport",
                "x-ds-method": "deleteUserListExport",
                "x-ds-service": "BulkExports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/exports/account_settings/{exportId}": {
            "get": {
                "tags": [
                    "AccountSettingsExport"
                ],
                "summary": "Returns the results for a single account settings export request.",
                "description": "Returns the results for a single account settings export request.\n\n- Required scopes: `account_read`\n\nGiven an export id, this method returns the results of an account settings export request.\nTo get a list of all the export requests, use `getAccountSettingsExports`.\n\nYou can find the actual list of settings at  `results[n].url` in the response. The settings export is formatted like this:\n\n``` json\n{\n  \"accounts\": [\n    {\n      \"account_id\": \"9ca037f4-xxxx-xxxx-xxxx-212e57d4f22e\",\n      \"name\": \"The Happy Company\",\n      . . .\n    },\n    {\n      \"account_id\": \"624e3e00-xxxx-xxxx-xxxx-43918c520dab\",\n      \"name\": \"LoanCo\",\n      . . .\n    }\n  ],\n  \"settings\": [\n    . . .\n    {\n      \"category\": \"Signing\",\n      \"name\": \"SignerCanSignOnMobile\",\n      \"account_values\": [\n        {\n          \"account_id\": \"9ca037f4-xxxx-xxxx-xxxx-212e57d4f22e\",\n          \"value\": \"true\",\n          \"rights\": \"editable\"\n        },\n        {\n          \"account_id\": \"624e3e00-xxxx-xxxx-xxxx-43918c520dab\",\n          \"value\": \"true\",\n          \"rights\": \"editable\"\n        }\n      ]\n    },\n    . . .\n  ]\n}\n\n```\n",
                "operationId": "OrganizationExport_OrganizationExport_GetAccountSettingsExportByExportId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "The export ID GUID for the request.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationExportResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "account_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getAccountSettingsExport",
                "x-ds-method": "getAccountSettingsExport",
                "x-ds-service": "BulkExports",
                "x-ds-in-sdk": true
            },
            "delete": {
                "tags": [
                    "AccountSettingsExport"
                ],
                "summary": "Deletes a single account settings export request.",
                "description": "Deletes a single account settings export request.\nAny data associated with the request is also deleted.\n\n- Required scopes: `account_read`\n\n",
                "operationId": "OrganizationExport_OrganizationExport_DeleteByAccountSettingsExportId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "The export ID GUID for the request.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "account_read"
                        ]
                    }
                ],
                "x-ds-methodname": "deleteAccountSettingsExport",
                "x-ds-method": "deleteAccountSettingsExport",
                "x-ds-service": "BulkExports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/imports/account_settings": {
            "get": {
                "tags": [
                    "AccountSettingsImport"
                ],
                "summary": "Returns the details and metadata for Bulk Account Settings Import requests in the organization.",
                "description": "Returns the details and metadata for Bulk Account Settings Import requests in the organization.\n\n- Required scopes: `account_read`",
                "operationId": "OrganizationImport_OrganizationImportAccountSettings_Get",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganizationAccountSettingsImportResponse"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "account_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getBulkAccountSettingsImports",
                "x-ds-method": "getBulkAccountSettingsImports",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            },
            "post": {
                "tags": [
                    "AccountSettingsImport"
                ],
                "summary": "Creates a new account settings import request.",
                "description": "Creates a new account settings import request.\n\n\n- Required scopes: `account_write`",
                "operationId": "OrganizationImport_OrganizationImportAccountSettings_Post",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "file.csv",
                        "in": "formData",
                        "description": "CSV file.",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationAccountSettingsImportResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "account_write"
                        ]
                    }
                ],
                "x-ds-methodname": "addBulkAccountSettingsImport",
                "x-ds-method": "addBulkAccountSettingsImport",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/imports/account_settings/{importId}": {
            "get": {
                "tags": [
                    "AccountSettingsImport"
                ],
                "summary": "Returns the details/metadata for a Bulk Account Settings Import request.",
                "description": "Returns the details/metadata for a Bulk Account Settings Import request.\n\nRequired - scopes: `account_read`\n\n\n\nGiven an import ID, this method returns the results of an account settings import request.\nTo get a list of all the import requests, use `getAccountSettingsImports`.\n\n",
                "operationId": "OrganizationImport_OrganizationImportAccountSettings_GetById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "importId",
                        "in": "path",
                        "description": "The import ID GUID for the request.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationAccountSettingsImportResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "account_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getBulkAccountSettingsImport",
                "x-ds-method": "getBulkAccountSettingsImport",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            },
            "delete": {
                "tags": [
                    "AccountSettingsImport"
                ],
                "summary": "Deletes a Bulk Account Settings Import request.",
                "description": "Deletes a single account settings import request.\nAny data associated with the request is also deleted.\n\n- Required scopes: `account_write`",
                "operationId": "OrganizationImport_OrganizationImportAccountSettings_DeleteById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "importId",
                        "in": "path",
                        "description": "The import ID GUID for the request.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "account_write"
                        ]
                    }
                ],
                "x-ds-methodname": "deleteBulkAccountSettingsImport",
                "x-ds-method": "deleteBulkAccountSettingsImport",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/imports/bulk_users/add": {
            "post": {
                "tags": [
                    "UserImport"
                ],
                "summary": "Creates a request to import new users into an account.",
                "description": "Creates a request to import *new* users.\n\n- Required scopes: `user_write`\n\n\n\nYour CSV import file is made up of a header row with the column headers and a row of user or account data for each user you want to add to an account. Only new users can be imported. Any changes to existing users will be ignored. To make changes to existing users, use `updateBulkUserImports`.\n\nTo ensure your CSV is properly formatted, use the\n[Sample Bulk Add CSV file](https://admin.docusign.com/static-resources/organization-user-import.csv)\n as a template. The following table describes the columns.\n\n\n\n| Column              | Required | Description                                                                                                                                                                                                                                                                                                                                                                                                         |\n| :------------------ | :------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| AccountID           | yes      | The API account ID for the account to which you want you add the user. You can find this id in the Admin area for the account under **API and Keys**.                                                                                                                                                                                                                                                            |\n| AccountName         |          | The name of the user's account in your organization. The account name must match the account ID provided.                                                                                                                                                                                                                                                                                                           |\n| FirstName           | yes      | The user's first name.                                                                                                                                                                                                                                                                                                                                                                                              |\n| LastName            | yes      | The user's last name.                                                                                                                                                                                                                                                                                                                                                                                               |\n| UserEmail           | yes      | The user's complete email address.                                                                                                                                                                                                                                                                                                                                                                                  |\n| PermissionSet       | yes      | The user's permission set. The PermissionSet value must match an existing permission set for the account. This value is not case sensitive.                                                                                                                                                                                                                                                                         |\n| UserTitle           |          | The user's job title.                                                                                                                                                                                                                                                                                                                                                                                               |\n| CompanyName         |          | The user's company name.                                                                                                                                                                                                                                                                                                                                                                                            |\n| Group               |          | The user's assigned groups. The Group values must match existing Group names for the account. Additional Group columns can be added to the file to add users to more than one group. You do not need to add users to the Everyone group, since all new users are automatically added to that group.                                                                                                                 |\n| AddressLine1        |          | The user's address, first line.                                                                                                                                                                                                                                                                                                                                                                                     |\n| AddressLine2        |          | The user's address, second line.                                                                                                                                                                                                                                                                                                                                                                                    |\n| City                |          | The user's city name.                                                                                                                                                                                                                                                                                                                                                                                               |\n| StateRegionProvince |          | The user's regional location.                                                                                                                                                                                                                                                                                                                                                                                       |\n| PostalCode          |          | The user's postal code.                                                                                                                                                                                                                                                                                                                                                                                             |\n| Phone               |          | The user's phone number.                                                                                                                                                                                                                                                                                                                                                                                            |\n| Language            |          | The user's display language for their DocuSign account. Must be one of: <ul><li>Chinese Simplified: <code>zh_CN</code></li><li>Chinese Traditional: <code>zh_TW</code></li><li>Dutch: <code>nl</code></li><li>English: <code>en</code></li><li>French: <code>fr</code></li><li>German: <code>de</code></li><li>Italian: <code>it</code></li><li>Japanese: <code>ja</code></li><li>Korean: <code>ko</code></li><li>Portuguese: <code>pt</code></li><li>Portuguese Brazil: <code>pt_BR</code></li><li>Russian: <code>ru</code></li><li>Spanish: <code>es</code></li></ul>                                                                                                                                                                                                                                                                                                                                                            |\n| LoginPolicy         |          | The user's login policy. Valid values include the following: <ul> <li>Column left blank = The user is created with no policy assigned.</li> <li>FedAuthRequired = The user must log in with an Identity Provider.</li> <li>FedAuthBypass = The user may log in with an Identity Provider or their DocuSign username and password.</li> </ul> For more information on login policies, see [Setting User Login Policy](https://support.docusign.com/en/guides/org-admin-guide-user-login-policy). |\n| AutoActivate        |          | For domain users, new users can be activated automatically for domain accounts using SSO by setting the value to **true**. The user is activated automatically once the import is complete. Memberships activated in this way do not receive an activation email.                                                                                                                                                   |\n\n\nYou can add up to 2,000 users to an account and include up to 50 accounts per import. The maximum number of users per import is 8,000.",
                "operationId": "OrganizationImport_OrganizationImportUsers_Insert",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "file.csv",
                        "in": "formData",
                        "description": "CSV file.",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationImportResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "addBulkUserImport",
                "x-ds-method": "addBulkUserImport",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/accounts/{accountId}/imports/bulk_users/add": {
            "post": {
                "tags": [
                    "SingleAccountUserImport"
                ],
                "summary": "Import request for adding user to a single account within the organization.\n",
                "description": "Import request for adding user to a single account within the organization.\nThis method lets you upload user information without requiring an AccountId column.\n\n- Required scopes: `user_write`\n",
                "operationId": "OrganizationImport_OrganizationImportSingleAccountUsers_Insert",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "file.csv",
                        "in": "formData",
                        "description": "CSV file.",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationImportResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "createBulkImportSingleAccountAddUsersRequest",
                "x-ds-method": "createBulkImportSingleAccountAddUsersRequest",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/imports/bulk_users/update": {
            "post": {
                "tags": [
                    "UserImport"
                ],
                "summary": "Bulk updates information for existing users.",
                "description": "Bulk updates information for existing users.\n\n- Required scopes: `user_write`\n\n\n\nYour CSV import file is made up of a header row with the column headers and a row of user or account data for each user you want to add to an account. Only new users can be imported. Any changes to existing users will be ignored. To make changes to existing users, use `updateBulkUserImports`.\n\n**Update limit**: You can update up to 2,000 users on an account and include up to 50 accounts per import. The maximum number of updated users per import is 8,000.\n\nThis method requires the following HTTP headers:\n\n| Header | Value |\n| :--- |  :--- |\n| Content-Type | `text/csv` |\n| Content-Disposition |  `filename=filename.csv` |\n\n\n\nTo ensure your CSV is properly formatted, use the\n[Sample Bulk Update CSV file](https://admin.docusign.com/static-resources/organization-user-update-import.csv)\n as a template. The following table describes the columns.\n\nNote that the columns for bulk adding users and bulk update users are slightly different.\nThe update CSV file requires an `APIUserName` column, and does not have an `AutoActivate` column.\n\n\n\n| Column              | Required | Description                                                                                                                                                                                                                                                                                                                                                                                                         |\n| :------------------ | :------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| AccountID           | yes      | The 32-character API account ID of the user's account in your organization. You can find this value in the API and Keys section of the Admin area of the account.                                                                                                                                                                                                                                                             |\n| AccountName         |          | The name of the user's account in your organization. The account name must match the account ID provided.                                                                                                                                                                                                                                                                                                           |\n| FirstName           | yes      | The user's first name.                                                                                                                                                                                                                                                                                                                                                                                              |\n| LastName            | yes      | The user's last name.                                                                                                                                                                                                                                                                                                                                                                                               |\n| UserEmail           | yes      | The user's complete email address.                                                                                                                                                                                                                                                                                                                                                                                  |\n| PermissionSet       | yes      | The user's permission set. The PermissionSet value must match an existing permission set for the account. This value is not case sensitive.                                                                                                                                                                                                                                                                         |\n| UserTitle           |          | The user's job title.                                                                                                                                                                                                                                                                                                                                                                                               |\n| CompanyName         |          | The user's company name.                                                                                                                                                                                                                                                                                                                                                                                            |\n| Group               |          | The user's assigned groups. The Group values must match existing Group names for the account. Additional Group columns can be added to the file to add users to more than one group. You do not need to add users to the Everyone group, since all new users are automatically added to that group.                                                                                                                 |\n| AddressLine1        |          | The user's address, first line.                                                                                                                                                                                                                                                                                                                                                                                     |\n| AddressLine2        |          | The user's address, second line.                                                                                                                                                                                                                                                                                                                                                                                    |\n| City                |          | The user's city name.                                                                                                                                                                                                                                                                                                                                                                                               |\n| StateRegionProvince |          | The user's regional location.                                                                                                                                                                                                                                                                                                                                                                                       |\n| PostalCode          |          | The user's postal code.                                                                                                                                                                                                                                                                                                                                                                                             |\n| Phone               |          | The user's phone number.                                                                                                                                                                                                                                                                                                                                                                                            |\n| Language            |          | The user's display language for their DocuSign account. Must be one of: <ul><li>Chinese Simplified: <code>zh_CN</code></li><li>Chinese Traditional: <code>zh_TW</code></li><li>Dutch: <code>nl</code></li><li>English: <code>en</code></li><li>French: <code>fr</code></li><li>German: <code>de</code></li><li>Italian: <code>it</code></li><li>Japanese: <code>ja</code></li><li>Korean: <code>ko</code></li><li>Portuguese: <code>pt</code></li><li>Portuguese Brazil: <code>pt_BR</code></li><li>Russian: <code>ru</code></li><li>Spanish: <code>es</code></li></ul>                                                                                                                                                                                                                                                                                                                                                            |\n| LoginPolicy         |          | The user's login policy. Valid values include the following: <ul> <li>Column left blank = The user is created with no policy assigned.</li> <li>FedAuthRequired = The user must log in with an Identity Provider.</li> <li>FedAuthBypass = The user may log in with an Identity Provider or their DocuSign username and password.</li> </ul> For more information on login policies, see [Setting User Login Policy](https://support.docusign.com/en/guides/org-admin-guide-user-login-policy). |\n| AutoActivate        |          | For domain users, new users can be activated automatically for domain accounts using SSO by setting the value to **true**. The user is activated automatically once the import is complete. Memberships activated in this way do not receive an activation email.                                                                                                                                                   |\n\n\n\n## Updating user email addresses\n\nChanging a user's email address should be done carefully. The user's email address is used to log in to DocuSign and receive documents to sign from others.\nOnce changed, existing documents that were sent or received:\n\n- Will still appear in the user's documents list.\n- Notifications about these documents will be sent to the new email address. If someone sends a new document to the old email address:\n- DocuSign will send a notification to the old address.\n- It will not appear in the documents list of the account.\n\nThis change of email address will be applied to all of the user's account memberships.",
                "operationId": "OrganizationImport_OrganizationImportUsers_Update",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "file.csv",
                        "in": "formData",
                        "description": "CSV file.",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationImportResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "updateBulkUserImports",
                "x-ds-method": "updateBulkUserImports",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/accounts/{accountId}/imports/bulk_users/update": {
            "post": {
                "tags": [
                    "SingleAccountUserImport"
                ],
                "summary": "Import request for updating users for a single account\nwithin the organization.",
                "description": "Import request for updating users for a single account\nwithin the organization.\n\n- Required scopes: `user_write`\n\nThis method lets you upload user information without requiring an AccountId column.\n\n",
                "operationId": "OrganizationImport_OrganizationImportSingleAccountUsers_Update",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "file.csv",
                        "in": "formData",
                        "description": "CSV file.",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationImportResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "createBulkImportSingleAccountUpdateUsersRequest",
                "x-ds-method": "createBulkImportSingleAccountUpdateUsersRequest",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/imports/bulk_users/close": {
            "post": {
                "tags": [
                    "UserImport"
                ],
                "summary": "Creates a request to close the accounts of existing users.",
                "description": "Creates a request to close the accounts of existing users.\n\n- Required scopes: `user_write`\n\nGiven a CSV list of users, close their accounts.\n\n\nYour CSV import file is made up of a header row with the column headers and a row of user or account data for each user whose account you want to close.\n\nTo ensure your CSV is properly formatted, use the\n[Sample Bulk Update CSV file](https://admin.docusign.com/static-resources/organization-user-update-import.csv)\n as a template. The following table describes the columns.\n\n\n\n\n| Column              | Required | Description                                                                                                                                                                                                                                                                                                                                                                                                         |\n| :------------------ | :------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| AccountID           | yes      | The 32-character API account ID of the user's account in your organization. You can find this value in the API and Keys section of the Admin area of the account.                                                                                                                                                                                                                                                             |\n| AccountName         |          | The name of the user's account in your organization. The account name must match the account ID provided.                                                                                                                                                                                                                                                                                                           |\n| FirstName           | yes      | The user's first name.                                                                                                                                                                                                                                                                                                                                                                                              |\n| LastName            | yes      | The user's last name.                                                                                                                                                                                                                                                                                                                                                                                               |\n| UserEmail           | yes      | The user's complete email address.                                                                                                                                                                                                                                                                                                                                                                                  |\n| PermissionSet       | yes      | The user's permission set. The PermissionSet value must match an existing permission set for the account. This value is not case sensitive.                                                                                                                                                                                                                                                                         |\n",
                "operationId": "OrganizationImport_OrganizationImportUsers_Close",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationImportResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "closeBulkUserImportRequest",
                "x-ds-method": "closeBulkUserImportRequest",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/imports/bulk_users/close_external": {
            "post": {
                "tags": [
                    "UserImport"
                ],
                "summary": "Closes external memberships.",
                "description": "Closes external memberships.\n\n- Required scopes: `user_write`\n\nExternal memberships are:\n\n- Users who have an email address at a verified domain\n- But do not belong to the organization\n",
                "operationId": "OrganizationImport_OrganizationImportUsers_CloseExternal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationImportResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "closeBulkExternalUserImportRequest",
                "x-ds-method": "closeBulkExternalUserImportRequest",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/imports/bulk_users": {
            "get": {
                "tags": [
                    "UserImport"
                ],
                "summary": "Gets a list of all of the user import requests.",
                "description": "Gets a list of all of the user import requests.\n\n- Required scopes: `user_read`\n",
                "operationId": "OrganizationImport_OrganizationImportUsers_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationImportsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getBulkUserImportRequests",
                "x-ds-method": "getBulkUserImportRequests",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/imports/bulk_users/{importId}": {
            "get": {
                "tags": [
                    "UserImport"
                ],
                "summary": "Returns the details of a single user import request.",
                "description": "Returns the details of a single user import request.\n\n- Required scopes: `user_read`\n\nUse this method to check the status of the request by looking at the `status` property of the response.\nOnce the status becomes `completed` (or fails), use this method to get the details.\n\nTo get a list of all of the user import requests, use `getBulkUserImportRequests`.",
                "operationId": "OrganizationImport_OrganizationImportUsers_GetById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "importId",
                        "in": "path",
                        "description": "The import ID GUID for the request.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationImportResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getBulkUserImportRequest",
                "x-ds-method": "getBulkUserImportRequest",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            },
            "delete": {
                "tags": [
                    "UserImport"
                ],
                "summary": "Deletes a specific user import request.",
                "description": "Deletes a specific import request and its results.\n\n- Required scopes: `user_write`\n\n\nTo delete a user, see `closeBulkUserImportRequest`.",
                "operationId": "OrganizationImport_OrganizationImportUsers_DeleteById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "importId",
                        "in": "path",
                        "description": "The import ID GUID for the request.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "deleteBulkUserImport",
                "x-ds-method": "deleteBulkUserImport",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/imports/bulk_users/{importId}/results_csv": {
            "get": {
                "tags": [
                    "UserImport"
                ],
                "summary": "Given the ID of a user import request,\nreturn the CSV file that was imported.",
                "description": "Returns the contents of the CSV file\nassociated with a user import request.\n\n- Required scopes: `user_read`\n\nThe results have an additional column,\n`ProcessingResults`,\nthat describes the results of importing that row.\n",
                "operationId": "OrganizationImport_OrganizationImportUsers_GetCSVResults",
                "produces": [
                    "text/csv"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "importId",
                        "in": "path",
                        "description": "The import ID GUID for the request.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getBulkUserImportCSV",
                "x-ds-method": "getBulkUserImportCSV",
                "x-ds-service": "BulkImports",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/identity_providers": {
            "get": {
                "tags": [
                    "IdentityProviders"
                ],
                "summary": "Returns the list of identity providers for an organization.",
                "description": "Returns the list of identity providers for an organization.\n\n- Required scopes: `identity_provider_read`\n",
                "operationId": "Organization_GetIdentityProviders",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdentityProvidersResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "identity_provider_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getIdentityProviders",
                "x-ds-method": "getIdentityProviders",
                "x-ds-service": "IdentityProviders",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/reserved_domains": {
            "get": {
                "tags": [
                    "ReservedDomains"
                ],
                "summary": "Returns the list of reserved domains for the organization.",
                "description": "Returns the list of reserved domains for the organization.\n\n- Required scopes: `domain_read`.\n\nPlease note the DocuSign Admin API only returns JSON, not XML.",
                "operationId": "Organization_GetReservedDomains",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DomainsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "domain_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getReservedDomains",
                "x-ds-method": "getReservedDomains",
                "x-ds-service": "ReservedDomains",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/users/profiles": {
            "post": {
                "tags": [
                    "eSignUserManagement"
                ],
                "summary": "Updates a user's information.",
                "description": "Updates a user's information.\n\n- Required scopes: `user_write`\n\n",
                "operationId": "User_Users_UpdateV2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateUsersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UsersUpdateResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "updateUser",
                "x-ds-method": "updateUser",
                "x-ds-service": "Users",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/users/email_addresses": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates a user's email address.",
                "description": "Updates a user's email address.\n\n- Required scopes: `user_write`\n\n",
                "operationId": "User_Users_UpdateEmailAddressesV2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateUsersEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UsersUpdateResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "updateEmailAddress",
                "x-ds-method": "updateEmailAddress",
                "x-ds-service": "Users",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/users/{userId}/accounts": {
            "delete": {
                "tags": [
                    "eSignUserManagement"
                ],
                "summary": "Closes a user's memberships.",
                "description": "Closes a user's memberships.\n\n- Required scopes: `user_write`\n\n",
                "operationId": "User_Users_CloseMembershipsV2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteMembershipsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeleteMembershipsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "closeMemberships",
                "x-ds-method": "closeMemberships",
                "x-ds-service": "Users",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns information about the users in an organization.",
                "description": "Returns information about the users in an organization.\n\n\n- Required scopes: `user_read`\n\nYou must include at least one of the following query parameters in the request:\n\n- `account_id`: The id of an account associated with the organization.\n- `organization_reserved_domain_id`: The id of one of the organization's reserved domains.\n- `email`: An email address associated with the users that you want to return.",
                "operationId": "OrganizationUser_OrganizationUsers_GetV2",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Index of first item to include in the response. The default value is 0.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Page size of the response. The default value is 20.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "Index of the last item to include in the response. Ignored if `take` parameter is specified.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email address of the desired user. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email_user_name_like",
                        "in": "query",
                        "description": "Selects users by pattern matching on the user's email address",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "membership_status",
                        "in": "query",
                        "description": "The user's membership status. One of:\n\n- `activation_required`\n- `activation_sent`\n- `active`\n- `closed`\n- `disabled`\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified.",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organization_reserved_domain_id",
                        "in": "query",
                        "description": "Select users that are in the specified domain. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified.",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "last_modified_since",
                        "in": "query",
                        "description": "Select users whose data have been modified since the date specified. `account_id` or `organization_reserved_domain_id` must be specified.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationUsersResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getUsers",
                "x-ds-method": "getUsers",
                "x-ds-service": "Users",
                "x-ds-in-sdk": true
            },
            "post": {
                "tags": [
                    "eSignUserManagement"
                ],
                "summary": "Creates a new user.",
                "description": "Creates a new user.\n\n- Required scopes: `user_write`\n\n",
                "operationId": "OrganizationUser_Users_AddV2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NewUserResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "createUser",
                "x-ds-method": "createUser",
                "x-ds-service": "Users",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/users/{userId}/memberships/{membershipId}": {
            "post": {
                "tags": [
                    "eSignUserManagement"
                ],
                "summary": "Activates user memberships.",
                "description": "Activates user memberships.\n\n- Required scopes: `user_write`\n",
                "operationId": "OrganizationUser_Users_ActivateMembershipV2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "membershipId",
                        "in": "path",
                        "description": "The membership ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForceActivateMembershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UpdateResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "activateMembership",
                "x-ds-method": "activateMembership",
                "x-ds-service": "Users",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/users/profile": {
            "get": {
                "tags": [
                    "eSignUserManagement"
                ],
                "summary": "Returns information about recently modified users.\n",
                "description": "Returns information about recently modified users.\n\n- Required scopes: `user_read`\n\nThe response includes up to the first 20 users modified\nin the last 10 days.\n\n\n\n\n",
                "operationId": "OrganizationUser_OrganizationUsers_GetProfileV2",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email address associated with the users you want to retrieve.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UsersDrilldownResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getUserProfiles",
                "x-ds-method": "getUserProfiles",
                "x-ds-service": "Users",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/users/{userId}/identities": {
            "delete": {
                "tags": [
                    "eSignUserManagement"
                ],
                "summary": "Deletes user identities.",
                "description": "Deletes user identities.\n\n- Required scopes: `user_write`\n\n",
                "operationId": "OrganizationUser_DeleteIdentitiesV2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteUserIdentityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeleteResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "deleteIdentities",
                "x-ds-method": "deleteIdentities",
                "x-ds-service": "Users",
                "x-ds-in-sdk": true
            }
        },
        "/v2/organizations/{organizationId}/accounts/{accountId}/users": {
            "post": {
                "tags": [
                    "eSignUserManagement"
                ],
                "summary": "Adds users to an account.",
                "description": "Adds users to an account.\n\n- Required scopes: `user_write`\n\n",
                "operationId": "OrganizationUser_OrganizationUsers_PostAccountUsersV2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID Guid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewAccountUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NewUserResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "addUsers",
                "x-ds-method": "addUsers",
                "x-ds-service": "Users",
                "x-ds-in-sdk": true
            }
        },
        "/v2.1/organizations/{organizationId}/accounts/{accountId}/dsgroups": {
            "get": {
                "tags": [
                    "MultiProductUserManagement"
                ],
                "summary": "Returns a list of DSGroups.",
                "description": "Returns a list of DSGroups\n\n- Required scopes: `user_read`",
                "operationId": "DocuSignGroupsv21_GetDSGroups_V2_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization's GUID.\n",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Start page of DSGroups.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size of DSGroups.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DSGroupListResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getDSGroups",
                "x-ds-method": "getDSGroups",
                "x-ds-service": "DSGroups",
                "x-ds-in-sdk": true
            },
            "post": {
                "tags": [
                    "MultiProductUserManagement"
                ],
                "summary": "Creates a new DSGroup.",
                "description": "Creates a new DSGroup.\n\n- Required scopes: `user_write`",
                "operationId": "DocuSignGroupsv21_AddDSGroup_V2_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization's GUID.\n",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "addRequest",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DSGroupAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DSGroupResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "addDSGroup",
                "x-ds-method": "addDSGroup",
                "x-ds-service": "DSGroups",
                "x-ds-in-sdk": true
            }
        },
        "/v2.1/organizations/{organizationId}/accounts/{accountId}/dsgroups/{dsGroupId}": {
            "get": {
                "tags": [
                    "MultiProductUserManagement"
                ],
                "summary": "Returns details about a single DSGroup.",
                "description": "Returns details about a single DSGroup.\n\n- Required scopes: `user_read`",
                "operationId": "DocuSignGroupsv21_GetDSGroup_V2_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization's GUID.\n",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dsGroupId",
                        "in": "path",
                        "description": "The DSGroup's ID GUID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DSGroupResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getDSGroup",
                "x-ds-method": "getDSGroup",
                "x-ds-service": "DSGroups",
                "x-ds-in-sdk": true
            },
            "delete": {
                "tags": [
                    "MultiProductUserManagement"
                ],
                "summary": "Deletes a DSGroup.",
                "description": "Deletes a DSGroup\n\n- Required scopes: `user_write`",
                "operationId": "DocuSignGroupsv21_DeleteDSGroup_V2_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization's GUID.\n",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dsGroupId",
                        "in": "path",
                        "description": "The DSGroup's GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "deleteDSGroup",
                "x-ds-method": "deleteDSGroup",
                "x-ds-service": "DSGroups",
                "x-ds-in-sdk": true
            }
        },
        "/v2.1/organizations/{organizationId}/accounts/{accountId}/dsgroups/{dsGroupId}/users": {
            "get": {
                "tags": [
                    "MultiProductUserManagement"
                ],
                "summary": "Gets a list of users in a DSGroup.",
                "description": "Gets a list of users in a DSGroup.\n\n- Required scopes: `user_read`",
                "operationId": "DocuSignGroupsv21_GetDSGroupUsers_V2_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization's GUID.\n",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dsGroupId",
                        "in": "path",
                        "description": "The DSGroup's GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Start page of DSGroups.\n",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size of DSGroups.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DSGroupAndUsersResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getDSGroupUsers",
                "x-ds-method": "getDSGroupUsers",
                "x-ds-service": "DSGroups",
                "x-ds-in-sdk": true
            },
            "post": {
                "tags": [
                    "MultiProductUserManagement"
                ],
                "summary": "Adds a list of users to a DSGroup.",
                "description": "Adds a list of users to a DSGroup.\n\n- Required scopes: `user_write`",
                "operationId": "DocuSignGroupsv21_AddDSGroupUsers_V2_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization's GUID.\n",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dsGroupId",
                        "in": "path",
                        "description": "The DSGroup's GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dSGroupUsersAddRequest",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DSGroupUsersAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AddDSGroupAndUsersResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "addDSGroupUsers",
                "x-ds-method": "addDSGroupUsers",
                "x-ds-service": "DSGroups",
                "x-ds-in-sdk": true
            },
            "delete": {
                "tags": [
                    "MultiProductUserManagement"
                ],
                "summary": "Removes a list of users from a DSGroup.",
                "description": "Removes a list of users from a DSGroup.\n\n- Required scopes: `user_write`",
                "operationId": "DocuSignGroupsv21_RemoveDSGroupUsers_V2_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization's GUID.\n",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dsGroupId",
                        "in": "path",
                        "description": "The DSGroup's GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dSGroupUsersRemoveRequest",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DSGroupUsersRemoveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RemoveDSGroupUsersResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "removeDSGroupUsers",
                "x-ds-method": "removeDSGroupUsers",
                "x-ds-service": "DSGroups",
                "x-ds-in-sdk": true
            }
        },
        "/v2.1/organizations/{organizationId}/accounts/{accountId}/products/permission_profiles": {
            "get": {
                "tags": [
                    "MultiProductUserManagement"
                ],
                "summary": "Gets products associated with the account and the available permission profiles.",
                "description": "Gets products associated with the account and the available permission profiles.\n\n- Required scopes: `user_read`",
                "operationId": "OrganizationProductPermissionProfile_GetProductPermissionProfiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization's GUID.\n",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProductPermissionProfilesResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getProductPermissionProfiles",
                "x-ds-method": "getProductPermissionProfiles",
                "x-ds-service": "ProductPermissionProfiles",
                "x-ds-in-sdk": true
            }
        },
        "/v2.1/organizations/{organizationId}/accounts/{accountId}/products/users/{userId}/permission_profiles": {
            "get": {
                "tags": [
                    "MultiProductUserManagement"
                ],
                "summary": "Retrieves a list of user's permission profiles for each account's product.",
                "description": "Retrieves a list of user's permission profiles for each account's product.\n\n- Required scopes: `user_read`",
                "operationId": "OrganizationProductPermissionProfile_GetUserProductPermissionProfiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization's GUID.\n",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProductPermissionProfilesResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_read"
                        ]
                    }
                ],
                "x-ds-methodname": "getUserProductPermissionProfiles",
                "x-ds-method": "getUserProductPermissionProfiles",
                "x-ds-service": "ProductPermissionProfiles",
                "x-ds-in-sdk": true
            },
            "post": {
                "tags": [
                    "MultiProductUserManagement"
                ],
                "summary": "Assigns user to permission profiles for one or more products.",
                "description": "Assigns user to permission profiles for one or more products.\n\n- Required scopes: `user_write`",
                "operationId": "OrganizationProductPermissionProfile_PostUserProductPermissionProfiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization's GUID.\n",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "productPermissionProfilesRequest",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductPermissionProfilesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserProductPermissionProfilesResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "addUserProductPermissionProfiles",
                "x-ds-method": "addUserProductPermissionProfiles",
                "x-ds-service": "ProductPermissionProfiles",
                "x-ds-in-sdk": true
            }
        },
        "/v2.1/organizations/{organizationId}/accounts/{accountId}/users": {
            "post": {
                "tags": [
                    "MultiProductUserManagement"
                ],
                "summary": "Creates and updates a multi-product user.",
                "description": "Creates and updates a multi-product user.\n\n- Required scopes: `user_write`",
                "operationId": "OrganizationUser_OrganizationUsers_PostAccountUsersV2_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization's GUID.\n",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account ID GUID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewMultiProductUserAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AddUserResponse"
                        }
                    }
                },
                "security": [
                    {
                        "accessCode": [
                            "user_write"
                        ]
                    }
                ],
                "x-ds-methodname": "addOrUpdateUser",
                "x-ds-method": "addOrUpdateUser",
                "x-ds-service": "Users",
                "x-ds-in-sdk": true
            }
        }
    },
    "definitions": {
        "OrganizationsResponse": {
            "type": "object",
            "properties": {
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationResponse"
                    },
                    "description": "A list of organizations of which the  authenticated user is a member."
                }
            },
            "x-ds-definition-name": "OrganizationsResponse",
            "description": "Organization list.",
            "x-ms-summary": "Organization list."
        },
        "OrganizationResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The ID of the organization."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the organization."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the organization."
                },
                "default_account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The default account ID of the organization."
                },
                "default_permission_profile_id": {
                    "format": "int64",
                    "type": "integer",
                    "description": "The default permission profile ID of the organization."
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "description": "The date the organization's account was created."
                },
                "created_by": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The user who created the organization account."
                },
                "last_modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "description": "The date the organization's account was last updated."
                },
                "last_modified_by": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The user who last updated the organization's account."
                },
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationAccountResponse"
                    },
                    "description": "A list of organization accounts."
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationSimpleIdObject"
                    },
                    "description": "A list of the organization accounts users."
                },
                "reserved_domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DomainResponse"
                    },
                    "description": "A list of reserved domains for the organization."
                },
                "identity_providers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IdentityProvidersResponse"
                    },
                    "description": "A list of identity providers for the organization."
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkResponse"
                    },
                    "description": "A list of links for the organization."
                }
            },
            "x-ds-definition-name": "OrganizationResponse",
            "description": "Information about an individual organization.",
            "x-ms-summary": "Information about an individual organization."
        },
        "OrganizationAccountResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The unique ID of the  account."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the account."
                },
                "external_account_id": {
                    "format": "int64",
                    "type": "integer",
                    "description": "The external account ID."
                },
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The site ID."
                }
            },
            "x-ds-definition-name": "OrganizationAccountResponse",
            "description": "Information about an account.",
            "x-ms-summary": "Information about an account."
        },
        "OrganizationSimpleIdObject": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The ID."
                }
            },
            "x-ds-definition-name": "OrganizationSimpleIdObject",
            "description": "An ID object.",
            "x-ms-summary": "An ID object."
        },
        "DomainResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The ID of the reserved domain."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the request. One of:\n\n- `unknown`\n- `pending`\n- `active`\n- `deactivated`\n- `rejected`"
                },
                "host_name": {
                    "type": "string",
                    "description": "The host name of the reserved domain."
                },
                "txt_token": {
                    "type": "string",
                    "description": "A token  in form of text of the reserved domain."
                },
                "identity_provider_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The identity provider ID of the reserved domain."
                },
                "settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SettingResponse"
                    },
                    "description": "A list of settings for the reserved domain.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkResponse"
                    },
                    "description": "A list of useful links."
                }
            },
            "x-ds-definition-name": "DomainResponse",
            "description": "Information about a reserved domain.",
            "x-ms-summary": "Information about a reserved domain."
        },
        "IdentityProvidersResponse": {
            "type": "object",
            "properties": {
                "identity_providers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IdentityProviderResponse"
                    },
                    "description": ""
                }
            },
            "x-ds-definition-name": "IdentityProvidersResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "LinkResponse": {
            "type": "object",
            "properties": {
                "rel": {
                    "type": "string",
                    "description": "The kind of linked item."
                },
                "href": {
                    "type": "string",
                    "description": "The URL of the linked item."
                }
            },
            "x-ds-definition-name": "LinkResponse",
            "description": "A link to a useful URL.",
            "x-ms-summary": "A link to a useful URL."
        },
        "SettingResponse": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key of the setting."
                },
                "value": {
                    "type": "object",
                    "description": "The value of the setting."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the setting. One of:\n\n- `unknown`\n- `guid`\n- `text`\n- `integer`\n- `boolean`\n- `datetime`\n- `enumeration`"
                }
            },
            "x-ds-definition-name": "SettingResponse",
            "description": "A key/value list of settings.",
            "x-ms-summary": "A key/value list of settings."
        },
        "Saml2IdentityProviderResponse": {
            "type": "object",
            "properties": {
                "issuer": {
                    "type": "string",
                    "description": "The name of the certificate issuer."
                },
                "settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SettingResponse"
                    },
                    "description": "A list of settings."
                },
                "certificates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CertificateResponse"
                    },
                    "description": "A list of certificates responses."
                },
                "attribute_mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequiredAttributeMappingResponse"
                    },
                    "description": "A list of attribute mappings."
                }
            },
            "x-ds-definition-name": "Saml2IdentityProviderResponse",
            "description": "Information about a SAML 2.0 identity provider.",
            "x-ms-summary": "Information about a SAML 2.0 identity provider."
        },
        "CertificateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The unique ID of the certificate."
                },
                "issuer": {
                    "type": "string",
                    "description": "The certificate issuer."
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the certificate."
                },
                "expiration_date": {
                    "format": "date-time",
                    "type": "string",
                    "description": "The date when the certificate expires."
                },
                "is_valid": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "If **true**, the certificate is valid."
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkResponse"
                    },
                    "description": "A list of useful links."
                }
            },
            "x-ds-definition-name": "CertificateResponse",
            "description": "Information about a single certificate.",
            "x-ms-summary": "Information about a single certificate."
        },
        "RequiredAttributeMappingResponse": {
            "type": "object",
            "properties": {
                "required_attribute_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The unique ID of the attribute."
                },
                "required_attribute_name": {
                    "type": "string",
                    "description": "The name of the attribute."
                },
                "required_attribute_friendly_name": {
                    "type": "string",
                    "description": "The human-readable name of the attribute."
                },
                "substitute_attribute_name": {
                    "type": "string",
                    "description": "The name of the substitute attribute."
                }
            },
            "x-ds-definition-name": "RequiredAttributeMappingResponse",
            "description": "A single attribute mapping response.",
            "x-ms-summary": "A single attribute mapping response."
        },
        "PermissionsResponse": {
            "type": "object",
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermissionProfileResponse"
                    },
                    "description": "An array of permission profile responses."
                }
            },
            "x-ds-definition-name": "PermissionsResponse",
            "description": "A list of permission profiles for a given account.",
            "x-ms-summary": "A list of permission profiles for a given account."
        },
        "PermissionProfileResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer",
                    "description": "The ID of the permission profile."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the permission profile. \n\nExample: `DocuSign Sender`"
                }
            },
            "x-ds-definition-name": "PermissionProfileResponse",
            "description": "This object is an individual permission profile response.",
            "x-ms-summary": "This object is an individual permission profile response."
        },
        "PermissionProfileResponse2_1": {
            "type": "object",
            "properties": {
                "permission_profile_id": {
                    "type": "string",
                    "description": ""
                },
                "permission_profile_name": {
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "PermissionProfileResponse2_1",
            "description": "",
            "x-ms-summary": ""
        },
        "MemberGroupsResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MemberGroupResponse"
                    },
                    "description": "A list of the responses."
                },
                "paging": {
                    "$ref": "#/definitions/PagingResponseProperties",
                    "description": "Information about paging though the responses."
                }
            },
            "x-ds-definition-name": "MemberGroupsResponse",
            "description": "A response about member groups. It contains the groups and paging information.",
            "x-ms-summary": "A response about member groups. It contains the groups and paging information."
        },
        "MemberGroupResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer",
                    "description": "The unique ID of the group."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the group."
                },
                "type": {
                    "type": "string",
                    "description": "The type of group. One of:\n\n- `invalid`\n- `admin_group`\n- `everyone_group`\n- `custom_group`"
                }
            },
            "x-ds-definition-name": "MemberGroupResponse",
            "description": "And individual group responses,.",
            "x-ms-summary": "And individual group responses,."
        },
        "PagingResponseProperties": {
            "type": "object",
            "properties": {
                "result_set_size": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "result_set_start_position": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "result_set_end_position": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "total_set_size": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "next": {
                    "type": "string",
                    "description": ""
                },
                "previous": {
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "PagingResponseProperties",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationExportRequest": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of export requested. One of:\n\n- `organization_domain_users_export`: All users of the reserved domains.\n- `organization_external_memberships_export`: Users whose email address domain is *not* linked to the organization. \n- `organization_memberships_export`: Every user in every account in the organization. Users in multiple accounts will appear more than once.\n- `organization_account_settings_export`: This value only applies to requests to export account settings."
                },
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationExportAccount"
                    },
                    "description": ""
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationExportDomain"
                    },
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationExportRequest",
            "description": "Enables you to specify the kind of export request.",
            "x-ms-summary": "Enables you to specify the kind of export request."
        },
        "OrganizationExportAccount": {
            "type": "object",
            "properties": {
                "account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified."
                }
            },
            "x-ds-definition-name": "OrganizationExportAccount",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationExportDomain": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationExportDomain",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationExportResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "type": {
                    "type": "string",
                    "description": ""
                },
                "requestor": {
                    "$ref": "#/definitions/OrganizationExportRequestorResponse",
                    "description": ""
                },
                "created": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "last_modified": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "completed": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "expires": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "status": {
                    "type": "string",
                    "description": "Status."
                },
                "selected_accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrgExportSelectedAccount"
                    },
                    "description": ""
                },
                "selected_domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrgExportSelectedDomain"
                    },
                    "description": ""
                },
                "metadata_url": {
                    "type": "string",
                    "description": ""
                },
                "percent_completed": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "number_rows": {
                    "format": "int64",
                    "type": "integer",
                    "description": ""
                },
                "size_bytes": {
                    "format": "int64",
                    "type": "integer",
                    "description": ""
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationExportTaskResponse"
                    },
                    "description": ""
                },
                "success": {
                    "type": "boolean",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationExportResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationExportRequestorResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": ""
                },
                "id": {
                    "type": "string",
                    "description": ""
                },
                "type": {
                    "type": "string",
                    "description": ""
                },
                "email": {
                    "type": "string",
                    "description": "The email address."
                }
            },
            "x-ds-definition-name": "OrganizationExportRequestorResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "OrgExportSelectedAccount": {
            "type": "object",
            "properties": {
                "account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified."
                }
            },
            "x-ds-definition-name": "OrgExportSelectedAccount",
            "description": "",
            "x-ms-summary": ""
        },
        "OrgExportSelectedDomain": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrgExportSelectedDomain",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationExportTaskResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "url": {
                    "type": "string",
                    "description": ""
                },
                "number_rows": {
                    "format": "int64",
                    "type": "integer",
                    "description": ""
                },
                "size_bytes": {
                    "format": "int64",
                    "type": "integer",
                    "description": ""
                },
                "error_details": {
                    "$ref": "#/definitions/OETR_ErrorDetails",
                    "description": "Error results."
                }
            },
            "x-ds-definition-name": "OrganizationExportTaskResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "OETR_ErrorDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "description": "The error number."
                },
                "error_description": {
                    "type": "string",
                    "description": "A longer description of the error."
                }
            },
            "x-ds-definition-name": "OETR_ErrorDetails",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationExportsResponse": {
            "type": "object",
            "properties": {
                "exports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationExportResponse"
                    },
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationExportsResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationAccountsRequest": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationAccountRequest"
                    },
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationAccountsRequest",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationAccountRequest": {
            "required": [
                "account_id"
            ],
            "type": "object",
            "properties": {
                "account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified."
                }
            },
            "x-ds-definition-name": "OrganizationAccountRequest",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationAccountSettingsImportResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "last_modified": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "completed": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "expires": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "percent_completed": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "number_processed_accounts": {
                    "format": "int64",
                    "type": "integer",
                    "description": ""
                },
                "number_unprocessed_accounts": {
                    "format": "int64",
                    "type": "integer",
                    "description": ""
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationAccountSettingsImportResultResponse"
                    },
                    "description": ""
                },
                "success": {
                    "type": "boolean",
                    "description": ""
                },
                "skipped_settings_by_account": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": ""
                },
                "id": {
                    "type": "string",
                    "description": ""
                },
                "organization_id": {
                    "type": "string",
                    "description": ""
                },
                "status": {
                    "type": "string",
                    "description": "Status."
                },
                "type": {
                    "type": "string",
                    "description": ""
                },
                "requestor": {
                    "$ref": "#/definitions/OrganizationAccountSettingsImportRequestorResponse",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationAccountSettingsImportResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationAccountSettingsImportResultResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "url": {
                    "type": "string",
                    "description": ""
                },
                "number_processed_accounts": {
                    "format": "int64",
                    "type": "integer",
                    "description": ""
                },
                "error_details": {
                    "$ref": "#/definitions/OASIRR_ErrorDetails",
                    "description": "Error results."
                },
                "processing_issues_by_account": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OASIRR_OrganizationAccountSettingsErrorDataResponse"
                    },
                    "description": ""
                },
                "number_unprocessed_accounts": {
                    "format": "int64",
                    "type": "integer",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationAccountSettingsImportResultResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationAccountSettingsImportRequestorResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": ""
                },
                "type": {
                    "type": "string",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": ""
                },
                "email": {
                    "type": "string",
                    "description": "The email address."
                }
            },
            "x-ds-definition-name": "OrganizationAccountSettingsImportRequestorResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "OASIRR_ErrorDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "description": "The error number."
                },
                "error_description": {
                    "type": "string",
                    "description": "A longer description of the error."
                }
            },
            "x-ds-definition-name": "OASIRR_ErrorDetails",
            "description": "",
            "x-ms-summary": ""
        },
        "OASIRR_OrganizationAccountSettingsErrorDataResponse": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified."
                },
                "account_name": {
                    "type": "string",
                    "description": ""
                },
                "error": {
                    "type": "string",
                    "description": "The error number."
                },
                "error_key": {
                    "type": "string",
                    "description": ""
                },
                "setting_key": {
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OASIRR_OrganizationAccountSettingsErrorDataResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationImportResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "type": {
                    "type": "string",
                    "description": ""
                },
                "requestor": {
                    "$ref": "#/definitions/OrganizationImportResponseRequestor",
                    "description": ""
                },
                "created": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "last_modified": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "status": {
                    "type": "string",
                    "description": "Status."
                },
                "user_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "processed_user_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "added_user_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "updated_user_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "closed_user_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "no_action_required_user_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "error_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "warning_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "invalid_column_headers": {
                    "type": "string",
                    "description": ""
                },
                "imports_not_found_or_not_available_for_accounts": {
                    "type": "string",
                    "description": ""
                },
                "imports_failed_for_accounts": {
                    "type": "string",
                    "description": ""
                },
                "imports_timed_out_for_accounts": {
                    "type": "string",
                    "description": ""
                },
                "imports_not_found_or_not_available_for_sites": {
                    "type": "string",
                    "description": ""
                },
                "imports_failed_for_sites": {
                    "type": "string",
                    "description": ""
                },
                "imports_timed_out_for_sites": {
                    "type": "string",
                    "description": ""
                },
                "file_level_error_rollups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationImportResponseErrorRollup"
                    },
                    "description": ""
                },
                "user_level_error_rollups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationImportResponseErrorRollup"
                    },
                    "description": ""
                },
                "user_level_warning_rollups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationImportResponseWarningRollup"
                    },
                    "description": ""
                },
                "has_csv_results": {
                    "type": "boolean",
                    "description": ""
                },
                "results_uri": {
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationImportResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationImportResponseRequestor": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": ""
                },
                "id": {
                    "type": "string",
                    "description": ""
                },
                "type": {
                    "type": "string",
                    "description": ""
                },
                "email": {
                    "type": "string",
                    "description": "The email address."
                }
            },
            "x-ds-definition-name": "OrganizationImportResponseRequestor",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationImportResponseErrorRollup": {
            "type": "object",
            "properties": {
                "error_type": {
                    "type": "string",
                    "description": ""
                },
                "count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationImportResponseErrorRollup",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationImportResponseWarningRollup": {
            "type": "object",
            "properties": {
                "warning_type": {
                    "type": "string",
                    "description": ""
                },
                "count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationImportResponseWarningRollup",
            "description": "",
            "x-ms-summary": ""
        },
        "OrganizationImportsResponse": {
            "type": "object",
            "properties": {
                "imports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationImportResponse"
                    },
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationImportsResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "IdentityProviderResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The unique ID of the identity provider."
                },
                "friendly_name": {
                    "type": "string",
                    "description": "The human-readable name of the identity provider."
                },
                "auto_provision_users": {
                    "type": "boolean",
                    "description": "If **true**, users who use this identity provider are automatically provisioned. "
                },
                "type": {
                    "type": "string",
                    "description": "The type of the identity provider. One of:\n\n- `none`\n- `saml_20`\n- `saml_11`\n- `saml_10`\n- `ws_federation`\n- `open_id_connect`"
                },
                "saml_20": {
                    "$ref": "#/definitions/Saml2IdentityProviderResponse",
                    "description": "If `type` is `saml_20`, contains details about the SAML 2.0 response."
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkResponse"
                    },
                    "description": "A list of useful URLs."
                }
            },
            "x-ds-definition-name": "IdentityProviderResponse",
            "description": "Information about a single identity provider.",
            "x-ms-summary": "Information about a single identity provider."
        },
        "OrganizationSalesforceAccountManagersResponse": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified."
                },
                "account_name": {
                    "type": "string",
                    "description": ""
                },
                "account_type": {
                    "type": "string",
                    "description": ""
                },
                "account_owner": {
                    "$ref": "#/definitions/OSAMR_Contact",
                    "description": ""
                },
                "account_manager": {
                    "$ref": "#/definitions/OSAMR_Contact",
                    "description": ""
                },
                "parent_account": {
                    "$ref": "#/definitions/OrganizationSalesforceAccountManagersResponse",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationSalesforceAccountManagersResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "OSAMR_Contact": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": ""
                },
                "email": {
                    "type": "string",
                    "description": "The email address."
                },
                "title": {
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OSAMR_Contact",
            "description": "",
            "x-ms-summary": ""
        },
        "OrgReportRequest": {
            "type": "object",
            "properties": {
                "report_type": {
                    "type": "string",
                    "description": ""
                },
                "report_date_range": {
                    "type": "string",
                    "description": ""
                },
                "account_ids": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "description": ""
                },
                "custom_start_date": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "custom_end_date": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrgReportRequest",
            "description": "",
            "x-ms-summary": ""
        },
        "OrgReportCreateResponse": {
            "type": "object",
            "properties": {
                "report_correlation_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrgReportCreateResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "OrgReportListResponse": {
            "type": "object",
            "properties": {
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrgReportListResponse_OrgReport"
                    },
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrgReportListResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "OrgReportListResponse_OrgReport": {
            "type": "object",
            "properties": {
                "complete": {
                    "type": "boolean",
                    "description": ""
                },
                "report_correlation_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "report_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "requestor": {
                    "$ref": "#/definitions/OrgReportListResponse_Requestor",
                    "description": ""
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "account_export_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "url": {
                    "type": "string",
                    "description": ""
                },
                "report_type_id": {
                    "type": "string",
                    "description": ""
                },
                "report_date_range": {
                    "type": "string",
                    "description": ""
                },
                "custom_start_date": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "custom_end_date": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrgReportListResponse_OrgReport",
            "description": "",
            "x-ms-summary": ""
        },
        "OrgReportListResponse_Requestor": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrgReportListResponse_Requestor",
            "description": "",
            "x-ms-summary": ""
        },
        "OrgReportConfigurationResponse": {
            "type": "object",
            "properties": {
                "is_account_limit_disabled": {
                    "type": "boolean",
                    "description": ""
                },
                "custom_dates_enabled": {
                    "type": "boolean",
                    "description": ""
                },
                "enabled_report_types": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrgReportConfigurationResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "DomainsResponse": {
            "type": "object",
            "properties": {
                "reserved_domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DomainResponse"
                    },
                    "description": "Information about reserved domains."
                }
            },
            "x-ds-definition-name": "DomainsResponse",
            "description": "A response about reserved domains.",
            "x-ms-summary": "A response about reserved domains."
        },
        "UpdateUsersRequest": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdateUserRequest"
                    },
                    "description": "A list of users whose information you want to change."
                }
            },
            "x-ds-definition-name": "UpdateUsersRequest",
            "description": "A list of users whose information you want to change.",
            "x-ms-summary": "A list of users whose information you want to change."
        },
        "UpdateUserRequest": {
            "required": [
                "id",
                "site_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The user's unique ID."
                },
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The site ID."
                },
                "user_name": {
                    "type": "string",
                    "description": "The full name of the user."
                },
                "first_name": {
                    "type": "string",
                    "description": "The user's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "The user's last name."
                },
                "email": {
                    "type": "string",
                    "description": "The email address."
                },
                "default_account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The account ID of the user's default account."
                },
                "language_culture": {
                    "type": "string",
                    "description": "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n"
                },
                "selected_languages": {
                    "type": "string",
                    "description": ""
                },
                "federated_status": {
                    "type": "string",
                    "description": "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`"
                },
                "force_password_change": {
                    "type": "boolean",
                    "description": "If **true**, the user will be required to change the account password."
                },
                "memberships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdateMembershipRequest"
                    },
                    "description": "A list of group membership requests."
                },
                "device_verification_enabled": {
                    "type": "boolean",
                    "description": ""
                }
            },
            "x-ds-definition-name": "UpdateUserRequest",
            "description": "Request to change a user's information.",
            "x-ms-summary": "Request to change a user's information."
        },
        "UpdateMembershipRequest": {
            "required": [
                "account_id"
            ],
            "type": "object",
            "properties": {
                "account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The user's unique ID."
                },
                "permission_profile": {
                    "$ref": "#/definitions/PermissionProfileRequest",
                    "description": "The user's permission profile."
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupRequest"
                    },
                    "description": "The user's requested groups."
                },
                "company_name": {
                    "type": "string",
                    "description": "The user's company name."
                },
                "job_title": {
                    "type": "string",
                    "description": "The user's job title."
                },
                "send_activation": {
                    "type": "boolean",
                    "description": "If **true**, send an activation request after the update."
                },
                "access_code": {
                    "type": "string",
                    "description": "The access code that the user needs to activate an account."
                }
            },
            "x-ds-definition-name": "UpdateMembershipRequest",
            "description": "A request to update group membership.",
            "x-ms-summary": "A request to update group membership."
        },
        "PermissionProfileRequest": {
            "required": [
                "id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer",
                    "description": "The ID of the permission profile."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the permission profile."
                }
            },
            "x-ds-definition-name": "PermissionProfileRequest",
            "description": "A permission profile.",
            "x-ms-summary": "A permission profile."
        },
        "GroupRequest": {
            "required": [
                "id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer",
                    "description": "The ID of the group."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the group."
                },
                "type": {
                    "type": "string",
                    "description": "The type of group. One of:\n\n- `invalid`\n- `admin_group`\n- `everyone_group`\n- `custom_group`"
                }
            },
            "x-ds-definition-name": "GroupRequest",
            "description": "A group for a user to belong to.",
            "x-ms-summary": "A group for a user to belong to."
        },
        "UsersUpdateResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "description": "If **true**, the request to change user information succeeded."
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserUpdateResponse"
                    },
                    "description": "A list of users whose email addresses have been updated."
                }
            },
            "x-ds-definition-name": "UsersUpdateResponse",
            "description": "The results of changing a user's information.",
            "x-ms-summary": "The results of changing a user's information."
        },
        "UserUpdateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The ID of the user whose email address has been updated."
                },
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The site ID."
                },
                "email": {
                    "type": "string",
                    "description": "The email address."
                },
                "error_details": {
                    "$ref": "#/definitions/ErrorDetails",
                    "description": "Error results."
                }
            },
            "x-ds-definition-name": "UserUpdateResponse",
            "description": "Error result of attempting to change a user's email address.",
            "x-ms-summary": "Error result of attempting to change a user's email address."
        },
        "ErrorDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "description": "The code for the error."
                },
                "error_description": {
                    "type": "string",
                    "description": "A description of the error."
                }
            },
            "x-ds-definition-name": "ErrorDetails",
            "description": "Errors.",
            "x-ms-summary": "Errors."
        },
        "UpdateUsersEmailRequest": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdateUserEmailRequest"
                    },
                    "description": "A list of users whose email address to change."
                }
            },
            "x-ds-definition-name": "UpdateUsersEmailRequest",
            "description": "A change email request.",
            "x-ms-summary": "A change email request."
        },
        "UpdateUserEmailRequest": {
            "required": [
                "id",
                "site_id",
                "email"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The ID of the users whose email address you want to change."
                },
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The site ID."
                },
                "email": {
                    "type": "string",
                    "description": "The new email address."
                }
            },
            "x-ds-definition-name": "UpdateUserEmailRequest",
            "description": "And individual change of email.",
            "x-ms-summary": "And individual change of email."
        },
        "DeleteMembershipsRequest": {
            "required": [
                "accounts"
            ],
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeleteMembershipRequest"
                    },
                    "description": "A list of accounts to close for a user."
                }
            },
            "x-ds-definition-name": "DeleteMembershipsRequest",
            "description": "A list of accounts to close for a user.",
            "x-ms-summary": "A list of accounts to close for a user."
        },
        "DeleteMembershipRequest": {
            "required": [
                "id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The ID of a user's account you want to close."
                }
            },
            "x-ds-definition-name": "DeleteMembershipRequest",
            "description": "",
            "x-ms-summary": ""
        },
        "DeleteMembershipsResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "description": "If **true**, the request to close the accounts succeeded."
                },
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeleteMembershipResponse"
                    },
                    "description": "A list of accounts that were closed."
                }
            },
            "x-ds-definition-name": "DeleteMembershipsResponse",
            "description": "The results of closing a user's account.",
            "x-ms-summary": "The results of closing a user's account."
        },
        "DeleteMembershipResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The ID of an account that could not be closed."
                },
                "error_details": {
                    "$ref": "#/definitions/ErrorDetails",
                    "description": "Error results."
                }
            },
            "x-ds-definition-name": "DeleteMembershipResponse",
            "description": "Results of closing accounts.",
            "x-ms-summary": "Results of closing accounts."
        },
        "OrganizationUsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationUserResponse"
                    },
                    "description": "A list of users."
                },
                "paging": {
                    "$ref": "#/definitions/PagingResponseProperties",
                    "description": "Contains information about paging through the results."
                }
            },
            "x-ds-definition-name": "OrganizationUsersResponse",
            "description": "A response containing information about users.",
            "x-ms-summary": "A response containing information about users."
        },
        "OrganizationUserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The user's unique ID."
                },
                "user_name": {
                    "type": "string",
                    "description": "The full name of the user."
                },
                "first_name": {
                    "type": "string",
                    "description": "The user's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "The user's last name."
                },
                "user_status": {
                    "type": "string",
                    "description": "The user's status. One of:\n\n- `active`\n- `created`\n- `closed`\n"
                },
                "membership_status": {
                    "type": "string",
                    "description": "The user's membership status. One of:\n\n- `activation_required`\n- `activation_sent`\n- `active`\n- `closed`\n- `disabled`\n"
                },
                "email": {
                    "type": "string",
                    "description": "The email address."
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "description": "The date the user's account was created."
                },
                "membership_created_on": {
                    "format": "date-time",
                    "type": "string",
                    "description": "The date on which the user became a member of the organization."
                },
                "ds_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DSGroupResponse"
                    },
                    "description": ""
                },
                "membership_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationUserResponse",
            "description": "Information about a user.",
            "x-ms-summary": "Information about a user."
        },
        "DSGroupResponse": {
            "type": "object",
            "properties": {
                "ds_group_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified."
                },
                "source_product_name": {
                    "type": "string",
                    "description": ""
                },
                "group_id": {
                    "type": "string",
                    "description": ""
                },
                "group_name": {
                    "type": "string",
                    "description": ""
                },
                "description": {
                    "type": "string",
                    "description": ""
                },
                "is_admin": {
                    "type": "boolean",
                    "description": ""
                },
                "last_modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "user_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "external_account_id": {
                    "format": "int64",
                    "type": "integer",
                    "description": ""
                },
                "account_name": {
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "DSGroupResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "NewUserRequest": {
            "required": [
                "accounts",
                "email"
            ],
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NewUserRequestAccountProperties"
                    },
                    "description": "A list of accounts the user will belong to."
                },
                "user_name": {
                    "type": "string",
                    "description": "The full name of the user."
                },
                "first_name": {
                    "type": "string",
                    "description": "The user's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "The user's last name."
                },
                "email": {
                    "type": "string",
                    "description": "The email address."
                },
                "default_account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The account ID of the user's default account."
                },
                "language_culture": {
                    "type": "string",
                    "description": "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n"
                },
                "selected_languages": {
                    "type": "string",
                    "description": ""
                },
                "access_code": {
                    "type": "string",
                    "description": "The access code that the user needs to activate an account."
                },
                "federated_status": {
                    "type": "string",
                    "description": "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`"
                },
                "auto_activate_memberships": {
                    "type": "boolean",
                    "description": "If **true**, the user's account is activated automatically."
                }
            },
            "x-ds-definition-name": "NewUserRequest",
            "description": "Information about a new user.",
            "x-ms-summary": "Information about a new user."
        },
        "NewUserRequestAccountProperties": {
            "required": [
                "id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The account ID."
                },
                "permission_profile": {
                    "$ref": "#/definitions/PermissionProfileRequest",
                    "description": "The new user's permission profile."
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupRequest"
                    },
                    "description": "The new user's requested groups."
                },
                "company_name": {
                    "type": "string",
                    "description": "The user's company name."
                },
                "job_title": {
                    "type": "string",
                    "description": "The user's job title."
                }
            },
            "x-ds-definition-name": "NewUserRequestAccountProperties",
            "description": "An individual new account user.",
            "x-ms-summary": "An individual new account user."
        },
        "NewUserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The ID of the added user"
                },
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The site ID of the added user."
                },
                "user_name": {
                    "type": "string",
                    "description": "The full name of the user."
                },
                "first_name": {
                    "type": "string",
                    "description": "The user's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "The user's last name."
                },
                "email": {
                    "type": "string",
                    "description": "The primary email address of the user."
                },
                "language_culture": {
                    "type": "string",
                    "description": "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n"
                },
                "federated_status": {
                    "type": "string",
                    "description": "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`\n"
                },
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NewUserResponseAccountProperties"
                    },
                    "description": "A list of accounts the user belongs to."
                }
            },
            "x-ds-definition-name": "NewUserResponse",
            "description": "Information about a newly created user.",
            "x-ms-summary": "Information about a newly created user."
        },
        "NewUserResponseAccountProperties": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The user's unique ID."
                },
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The site ID of the account."
                },
                "permission_profile": {
                    "$ref": "#/definitions/PermissionProfileResponse",
                    "description": "A profile or list of the permissions the user has access to."
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MemberGroupResponse"
                    },
                    "description": "A list of groups that the user belongs to."
                },
                "company_name": {
                    "type": "string",
                    "description": "The user's company name."
                },
                "job_title": {
                    "type": "string",
                    "description": "The job title of the user."
                }
            },
            "x-ds-definition-name": "NewUserResponseAccountProperties",
            "description": "Information about a newly created user.",
            "x-ms-summary": "Information about a newly created user."
        },
        "ForceActivateMembershipRequest": {
            "required": [
                "site_id"
            ],
            "type": "object",
            "properties": {
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                }
            },
            "x-ds-definition-name": "ForceActivateMembershipRequest",
            "description": "",
            "x-ms-summary": ""
        },
        "UpdateResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status of the request.\n"
                }
            },
            "x-ds-definition-name": "UpdateResponse",
            "description": "A response.",
            "x-ms-summary": "A response."
        },
        "UsersDrilldownResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserDrilldownResponse"
                    },
                    "description": "A list of users."
                }
            },
            "x-ds-definition-name": "UsersDrilldownResponse",
            "description": "Information about a list of users.",
            "x-ms-summary": "Information about a list of users."
        },
        "UserDrilldownResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The user's unique ID."
                },
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The site ID of the organization."
                },
                "site_name": {
                    "type": "string",
                    "description": "The site name of the account."
                },
                "user_name": {
                    "type": "string",
                    "description": "The full name of the user."
                },
                "first_name": {
                    "type": "string",
                    "description": "The user's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "The user's last name."
                },
                "user_status": {
                    "type": "string",
                    "description": "The user's status. One of:\n\n- `active`\n- `created`\n- `closed`\n"
                },
                "default_account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The ID of the user's default account."
                },
                "default_account_name": {
                    "type": "string",
                    "description": "The name of the user's default account."
                },
                "language_culture": {
                    "type": "string",
                    "description": "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n"
                },
                "selected_languages": {
                    "type": "string",
                    "description": ""
                },
                "federated_status": {
                    "type": "string",
                    "description": "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`\n"
                },
                "is_organization_admin": {
                    "type": "boolean",
                    "description": "If **true**, the user has organization administration privileges."
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "description": "The date the user's account was created."
                },
                "last_login": {
                    "format": "date-time",
                    "type": "string",
                    "description": "The last time the user logged in."
                },
                "memberships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MembershipResponse"
                    },
                    "description": "A list of organizations that have groups that the user is a member of."
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserIdentityResponse"
                    },
                    "description": "A list of identities associated with the user."
                },
                "device_verification_enabled": {
                    "type": "boolean",
                    "description": ""
                }
            },
            "x-ds-definition-name": "UserDrilldownResponse",
            "description": "Information about a user.",
            "x-ms-summary": "Information about a user."
        },
        "MembershipResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email address."
                },
                "account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The ID of the account."
                },
                "external_account_id": {
                    "type": "string",
                    "description": "The external account ID."
                },
                "account_name": {
                    "type": "string",
                    "description": "The name of the account."
                },
                "is_external_account": {
                    "type": "boolean",
                    "description": "If **true**,\nthis is an external account."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the user's membership."
                },
                "permission_profile": {
                    "$ref": "#/definitions/PermissionProfileResponse",
                    "description": "The user's permission profile."
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "description": "The date the user's account was created."
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MemberGroupResponse"
                    },
                    "description": "A list of groups the user is a member of in this account,"
                },
                "is_admin": {
                    "type": "boolean",
                    "description": "If **true**,\nthe user has administration \nprivileges on the account."
                }
            },
            "x-ds-definition-name": "MembershipResponse",
            "description": "Information about group membership.",
            "x-ms-summary": "Information about group membership."
        },
        "UserIdentityResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The ID of the result."
                },
                "provider_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The ID of the identity provider."
                },
                "user_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The user ID."
                },
                "immutable_id": {
                    "type": "string",
                    "description": "A unique ID to identify the removed user."
                },
                "error_details": {
                    "$ref": "#/definitions/ErrorDetails",
                    "description": "Error results."
                }
            },
            "x-ds-definition-name": "UserIdentityResponse",
            "description": "Results of deleting a user identity.",
            "x-ms-summary": "Results of deleting a user identity."
        },
        "DeleteUserIdentityRequest": {
            "required": [
                "identities"
            ],
            "type": "object",
            "properties": {
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserIdentityRequest"
                    },
                    "description": "A list of identities."
                }
            },
            "x-ds-definition-name": "DeleteUserIdentityRequest",
            "description": "Request to delete a user's identities,",
            "x-ms-summary": "Request to delete a user's identities,"
        },
        "UserIdentityRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The ID of the identity."
                }
            },
            "x-ds-definition-name": "UserIdentityRequest",
            "description": "User identity,",
            "x-ms-summary": "User identity,"
        },
        "DeleteResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "description": "If **true**, the request succeeded."
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserIdentityResponse"
                    },
                    "description": "A list of identities to delete."
                }
            },
            "x-ds-definition-name": "DeleteResponse",
            "description": "Results of deleting identities.",
            "x-ms-summary": "Results of deleting identities."
        },
        "NewAccountUserRequest": {
            "required": [
                "email"
            ],
            "type": "object",
            "properties": {
                "permission_profile": {
                    "$ref": "#/definitions/PermissionProfileRequest",
                    "description": "The new user's permission profile."
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupRequest"
                    },
                    "description": "The new user's requested groups."
                },
                "user_name": {
                    "type": "string",
                    "description": "The full name of the user."
                },
                "first_name": {
                    "type": "string",
                    "description": "The user's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "The user's last name."
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the user."
                },
                "default_account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "The account ID of the user's default account."
                },
                "language_culture": {
                    "type": "string",
                    "description": "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n"
                },
                "selected_languages": {
                    "type": "string",
                    "description": ""
                },
                "access_code": {
                    "type": "string",
                    "description": "The access code that the user needs to activate an account."
                },
                "federated_status": {
                    "type": "string",
                    "description": "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`\n"
                },
                "auto_activate_memberships": {
                    "type": "boolean",
                    "description": "If **true**, the user's account is activated automatically."
                }
            },
            "x-ds-definition-name": "NewAccountUserRequest",
            "description": "A new user request.",
            "x-ms-summary": "A new user request."
        },
        "DSGroupListResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The page number."
                },
                "page_size": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The number of items per page."
                },
                "total_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified."
                },
                "ds_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DSGroupResponse"
                    },
                    "readOnly": true,
                    "description": ""
                }
            },
            "x-ds-definition-name": "DSGroupListResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "DSGroupAddRequest": {
            "required": [
                "group_name"
            ],
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string",
                    "description": ""
                },
                "description": {
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "DSGroupAddRequest",
            "description": "",
            "x-ms-summary": ""
        },
        "DSGroupUsersAddRequest": {
            "required": [
                "user_ids"
            ],
            "type": "object",
            "properties": {
                "user_ids": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "description": ""
                }
            },
            "x-ds-definition-name": "DSGroupUsersAddRequest",
            "description": "",
            "x-ms-summary": ""
        },
        "AddDSGroupAndUsersResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "$ref": "#/definitions/DSGroupResponse",
                    "description": ""
                },
                "group_users": {
                    "$ref": "#/definitions/AddDSGroupUsersResponse",
                    "description": ""
                }
            },
            "x-ds-definition-name": "AddDSGroupAndUsersResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "AddDSGroupUsersResponse": {
            "type": "object",
            "properties": {
                "is_success": {
                    "type": "boolean",
                    "description": ""
                },
                "TotalCount": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DSGroupUserResponse"
                    },
                    "description": "A list of users."
                }
            },
            "x-ds-definition-name": "AddDSGroupUsersResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "DSGroupUserResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified."
                },
                "user_name": {
                    "type": "string",
                    "description": "The full name of the user."
                },
                "first_name": {
                    "type": "string",
                    "description": "The user's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "The user's last name."
                },
                "middle_name": {
                    "type": "string",
                    "description": ""
                },
                "status": {
                    "type": "string",
                    "description": "Status."
                },
                "error_details": {
                    "$ref": "#/definitions/ErrorDetails",
                    "description": "Error results."
                }
            },
            "x-ds-definition-name": "DSGroupUserResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "DSGroupAndUsersResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "$ref": "#/definitions/DSGroupResponse",
                    "description": ""
                },
                "group_users": {
                    "$ref": "#/definitions/DSGroupUsersResponse",
                    "description": ""
                }
            },
            "x-ds-definition-name": "DSGroupAndUsersResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "DSGroupUsersResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The page number."
                },
                "page_size": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The number of items per page."
                },
                "total_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DSGroupUserResponse"
                    },
                    "description": "A list of users."
                }
            },
            "x-ds-definition-name": "DSGroupUsersResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "DSGroupUsersRemoveRequest": {
            "required": [
                "user_ids"
            ],
            "type": "object",
            "properties": {
                "user_ids": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "description": ""
                }
            },
            "x-ds-definition-name": "DSGroupUsersRemoveRequest",
            "description": "",
            "x-ms-summary": ""
        },
        "RemoveDSGroupUsersResponse": {
            "type": "object",
            "properties": {
                "is_success": {
                    "type": "boolean",
                    "description": ""
                },
                "failed_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DSGroupUserResponse"
                    },
                    "description": ""
                }
            },
            "x-ds-definition-name": "RemoveDSGroupUsersResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "ProductPermissionProfilesResponse": {
            "type": "object",
            "properties": {
                "product_permission_profiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductPermissionProfileResponse"
                    },
                    "readOnly": true,
                    "description": ""
                }
            },
            "x-ds-definition-name": "ProductPermissionProfilesResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "ProductPermissionProfileResponse": {
            "type": "object",
            "properties": {
                "product_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "product_name": {
                    "type": "string",
                    "description": ""
                },
                "permission_profiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermissionProfileResponse2_1"
                    },
                    "description": ""
                },
                "error_message": {
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "ProductPermissionProfileResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "ProductPermissionProfilesRequest": {
            "required": [
                "product_permission_profiles"
            ],
            "type": "object",
            "properties": {
                "product_permission_profiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductPermissionProfileRequest"
                    },
                    "description": ""
                }
            },
            "x-ds-definition-name": "ProductPermissionProfilesRequest",
            "description": "",
            "x-ms-summary": ""
        },
        "ProductPermissionProfileRequest": {
            "required": [
                "product_id",
                "permission_profile_id"
            ],
            "type": "object",
            "properties": {
                "product_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "permission_profile_id": {
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "ProductPermissionProfileRequest",
            "description": "",
            "x-ms-summary": ""
        },
        "UserProductPermissionProfilesResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified."
                },
                "product_permission_profiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductPermissionProfileResponse"
                    },
                    "description": ""
                }
            },
            "x-ds-definition-name": "UserProductPermissionProfilesResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "NewMultiProductUserAddRequest": {
            "required": [
                "product_permission_profiles",
                "email"
            ],
            "type": "object",
            "properties": {
                "product_permission_profiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductPermissionProfileRequest"
                    },
                    "description": ""
                },
                "ds_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DSGroupRequest"
                    },
                    "description": ""
                },
                "user_name": {
                    "type": "string",
                    "description": "The full name of the user."
                },
                "first_name": {
                    "type": "string",
                    "description": "The user's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "The user's last name."
                },
                "email": {
                    "type": "string",
                    "description": "The email address."
                },
                "default_account_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "language_culture": {
                    "type": "string",
                    "description": "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n"
                },
                "access_code": {
                    "type": "string",
                    "description": "The access code that the user needs to activate an account."
                },
                "federated_status": {
                    "type": "string",
                    "description": "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`"
                },
                "auto_activate_memberships": {
                    "type": "boolean",
                    "description": "If **true**, the user's account is activated automatically."
                }
            },
            "x-ds-definition-name": "NewMultiProductUserAddRequest",
            "description": "",
            "x-ms-summary": ""
        },
        "DSGroupRequest": {
            "required": [
                "ds_group_id"
            ],
            "type": "object",
            "properties": {
                "ds_group_id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                }
            },
            "x-ds-definition-name": "DSGroupRequest",
            "description": "",
            "x-ms-summary": ""
        },
        "AddUserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "user_name": {
                    "type": "string",
                    "description": "The full name of the user."
                },
                "first_name": {
                    "type": "string",
                    "description": "The user's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "The user's last name."
                },
                "email": {
                    "type": "string",
                    "description": "The email address."
                },
                "language_culture": {
                    "type": "string",
                    "description": "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n"
                },
                "federated_status": {
                    "type": "string",
                    "description": "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`"
                },
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AddUserResponseAccountProperties"
                    },
                    "readOnly": true,
                    "description": ""
                }
            },
            "x-ds-definition-name": "AddUserResponse",
            "description": "",
            "x-ms-summary": ""
        },
        "AddUserResponseAccountProperties": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "product_permission_profiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductPermissionProfileResponse"
                    },
                    "readOnly": true,
                    "description": ""
                },
                "ds_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DSGroupResponse"
                    },
                    "readOnly": true,
                    "description": ""
                },
                "company_name": {
                    "type": "string",
                    "description": "The user's company name."
                },
                "job_title": {
                    "type": "string",
                    "description": "The user's job title."
                }
            },
            "x-ds-definition-name": "AddUserResponseAccountProperties",
            "description": "",
            "x-ms-summary": ""
        },
        "Users": {
            "x-ds-category": "UserManagement",
            "x-ms-summary": "Methods to manage users in an account.",
            "description": "Methods to manage users in an account."
        },
        "eSignUserManagement": {
            "x-ds-category": "UserManagement",
            "x-ms-summary": "Methods to manage eSignature users in an account.",
            "description": "Methods to manage eSignature users in an account."
        },
        "MultiProductUserManagement": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "site_id": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "user_name": {
                    "type": "string",
                    "description": "The full name of the user."
                },
                "first_name": {
                    "type": "string",
                    "description": "The user's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "The user's last name."
                },
                "email": {
                    "type": "string",
                    "description": "The email address."
                },
                "language_culture": {
                    "type": "string",
                    "description": "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n"
                },
                "federated_status": {
                    "type": "string",
                    "description": "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`"
                },
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AddUserResponseAccountProperties"
                    },
                    "readOnly": true,
                    "description": ""
                }
            },
            "x-ds-definition-name": "AddUserResponse",
            "description": "Methods to manage multi-product users in an account.",
            "x-ds-category": "UserManagement",
            "x-ds-order": "100",
            "x-ms-summary": "Methods to manage multi-product users in an account."
        },
        "UserExport": {
            "x-ds-category": "BulkOperations",
            "x-ms-summary": "Methods for exporting a user list.",
            "description": "Methods for exporting a user list."
        },
        "AccountSettingsExport": {
            "x-ds-category": "BulkOperations",
            "x-ms-summary": "Methods and objects to get account information.",
            "description": "Methods and objects to get account information."
        },
        "UserImport": {
            "x-ds-category": "BulkOperations",
            "x-ms-summary": "Methods to import users.\n",
            "description": "Methods to import users.\n"
        },
        "IdentityProviders": {
            "x-ds-category": "IdentityProviders",
            "x-ms-summary": "Methods to get a list of identity providers.",
            "description": "Methods to get a list of identity providers."
        },
        "ReservedDomains": {
            "x-ds-category": "ReservedDomains",
            "x-ms-summary": "Methods to get a list of reserved domains.",
            "description": "Methods to get a list of reserved domains."
        },
        "Organization": {
            "x-ds-category": "Organization",
            "x-ms-summary": "Methods for working with organizations.",
            "description": "Methods for working with organizations."
        },
        "AccountSettingsImport": {
            "x-ds-category": "BulkOperations",
            "x-ms-summary": "Methods and objects to update account settings.",
            "description": "Methods and objects to update account settings."
        },
        "SingleAccountUserImport": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "description": ""
                },
                "type": {
                    "type": "string",
                    "description": ""
                },
                "requestor": {
                    "$ref": "#/definitions/OrganizationImportResponseRequestor",
                    "description": ""
                },
                "created": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "last_modified": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                },
                "status": {
                    "type": "string",
                    "description": "Status."
                },
                "user_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "processed_user_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "added_user_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "updated_user_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "closed_user_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "no_action_required_user_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "error_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "warning_count": {
                    "format": "int32",
                    "type": "integer",
                    "description": ""
                },
                "invalid_column_headers": {
                    "type": "string",
                    "description": ""
                },
                "imports_not_found_or_not_available_for_accounts": {
                    "type": "string",
                    "description": ""
                },
                "imports_failed_for_accounts": {
                    "type": "string",
                    "description": ""
                },
                "imports_timed_out_for_accounts": {
                    "type": "string",
                    "description": ""
                },
                "imports_not_found_or_not_available_for_sites": {
                    "type": "string",
                    "description": ""
                },
                "imports_failed_for_sites": {
                    "type": "string",
                    "description": ""
                },
                "imports_timed_out_for_sites": {
                    "type": "string",
                    "description": ""
                },
                "file_level_error_rollups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationImportResponseErrorRollup"
                    },
                    "description": ""
                },
                "user_level_error_rollups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationImportResponseErrorRollup"
                    },
                    "description": ""
                },
                "user_level_warning_rollups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationImportResponseWarningRollup"
                    },
                    "description": ""
                },
                "has_csv_results": {
                    "type": "boolean",
                    "description": ""
                },
                "results_uri": {
                    "type": "string",
                    "description": ""
                }
            },
            "x-ds-definition-name": "OrganizationImportResponse",
            "description": "Methods to import users.",
            "x-ds-category": "BulkOperations",
            "x-ds-order": "100",
            "x-ms-summary": "Methods to import users."
        }
    },
    "securityDefinitions": {
        "accessCode": {
            "type": "oauth2",
            "description": "OAuth2 Access code Grant",
            "flow": "accessCode",
            "authorizationUrl": "https://account.docusign.com/oauth/auth",
            "tokenUrl": "https://account.docusign.com/oauth/auth",
            "scopes": {
                "organization_read": "",
                "permission_read": "",
                "group_read": "",
                "user_read": "",
                "account_read": "",
                "account_write": "",
                "user_write": "",
                "identity_provider_read": "",
                "domain_read": ""
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "Methods to manage users in an account."
        },
        {
            "name": "eSignUserManagement",
            "description": "Methods to manage eSignature users in an account."
        },
        {
            "name": "MultiProductUserManagement",
            "description": "Methods to manage multi-product users in an account."
        },
        {
            "name": "UserExport",
            "description": "Methods for exporting a user list."
        },
        {
            "name": "AccountSettingsExport",
            "description": "Methods and objects to get account information."
        },
        {
            "name": "UserImport",
            "description": "Methods to import users.\n\nTo ensure your CSV is properly formatted, use the\n[Sample Bulk Add CSV file](https://admin.docusign.com/static-resources/organization-user-import.csv)\n as a template.\n\nYou can add up to 2,000 users to an account and include up to 50 accounts per import. The maximum number of users per import is 8,000."
        },
        {
            "name": "IdentityProviders",
            "description": "Methods to get a list of identity providers."
        },
        {
            "name": "ReservedDomains",
            "description": "Methods to get a list of reserved domains."
        },
        {
            "name": "Organization",
            "description": "Methods for working with organizations."
        },
        {
            "name": "AccountSettingsImport",
            "description": "Methods and objects to update account settings."
        },
        {
            "name": "SingleAccountUserImport",
            "description": "Methods to import users."
        }
    ],
    "x-ds-categories": [
        {
            "name": "UserManagement",
            "summary": "Methods to manage users in an account.",
            "description": "Methods to manage users in an account."
        },
        {
            "name": "BulkOperations",
            "summary": "Methods to import and export users and accounts.",
            "description": "Methods to import and export users and accounts."
        },
        {
            "name": "IdentityProviders",
            "summary": "Methods to get a list of identity providers.",
            "description": "Methods to get a list of identity providers."
        },
        {
            "name": "ReservedDomains",
            "summary": "Methods to get a list of reserved domains.",
            "description": "Methods to get a list of reserved domains."
        },
        {
            "name": "Organization",
            "summary": "Methods for working with organizations.",
            "description": "Methods for working with organizations."
        }
    ]
}